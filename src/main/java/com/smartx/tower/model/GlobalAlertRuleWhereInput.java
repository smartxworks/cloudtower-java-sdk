/*
 * CloudTower APIs
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartx.tower.model.AlertRuleObject;
import com.smartx.tower.model.AlertRuleUnit;
import com.smartx.tower.model.AlertRuleWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GlobalAlertRuleWhereInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GlobalAlertRuleWhereInput {
  public static final String SERIALIZED_NAME_A_N_D = "AND";
  @SerializedName(SERIALIZED_NAME_A_N_D)
  private List<GlobalAlertRuleWhereInput> AND = null;

  public static final String SERIALIZED_NAME_N_O_T = "NOT";
  @SerializedName(SERIALIZED_NAME_N_O_T)
  private List<GlobalAlertRuleWhereInput> NOT = null;

  public static final String SERIALIZED_NAME_O_R = "OR";
  @SerializedName(SERIALIZED_NAME_O_R)
  private List<GlobalAlertRuleWhereInput> OR = null;

  public static final String SERIALIZED_NAME_ALERT_RULES_EVERY = "alert_rules_every";
  @SerializedName(SERIALIZED_NAME_ALERT_RULES_EVERY)
  private AlertRuleWhereInput alertRulesEvery;

  public static final String SERIALIZED_NAME_ALERT_RULES_NONE = "alert_rules_none";
  @SerializedName(SERIALIZED_NAME_ALERT_RULES_NONE)
  private AlertRuleWhereInput alertRulesNone;

  public static final String SERIALIZED_NAME_ALERT_RULES_SOME = "alert_rules_some";
  @SerializedName(SERIALIZED_NAME_ALERT_RULES_SOME)
  private AlertRuleWhereInput alertRulesSome;

  public static final String SERIALIZED_NAME_BOOLEAN = "boolean";
  @SerializedName(SERIALIZED_NAME_BOOLEAN)
  private Boolean _boolean;

  public static final String SERIALIZED_NAME_BOOLEAN_NOT = "boolean_not";
  @SerializedName(SERIALIZED_NAME_BOOLEAN_NOT)
  private Boolean booleanNot;

  public static final String SERIALIZED_NAME_CAUSE = "cause";
  @SerializedName(SERIALIZED_NAME_CAUSE)
  private String cause;

  public static final String SERIALIZED_NAME_CAUSE_CONTAINS = "cause_contains";
  @SerializedName(SERIALIZED_NAME_CAUSE_CONTAINS)
  private String causeContains;

  public static final String SERIALIZED_NAME_CAUSE_ENDS_WITH = "cause_ends_with";
  @SerializedName(SERIALIZED_NAME_CAUSE_ENDS_WITH)
  private String causeEndsWith;

  public static final String SERIALIZED_NAME_CAUSE_GT = "cause_gt";
  @SerializedName(SERIALIZED_NAME_CAUSE_GT)
  private String causeGt;

  public static final String SERIALIZED_NAME_CAUSE_GTE = "cause_gte";
  @SerializedName(SERIALIZED_NAME_CAUSE_GTE)
  private String causeGte;

  public static final String SERIALIZED_NAME_CAUSE_IN = "cause_in";
  @SerializedName(SERIALIZED_NAME_CAUSE_IN)
  private List<String> causeIn = null;

  public static final String SERIALIZED_NAME_CAUSE_LT = "cause_lt";
  @SerializedName(SERIALIZED_NAME_CAUSE_LT)
  private String causeLt;

  public static final String SERIALIZED_NAME_CAUSE_LTE = "cause_lte";
  @SerializedName(SERIALIZED_NAME_CAUSE_LTE)
  private String causeLte;

  public static final String SERIALIZED_NAME_CAUSE_NOT = "cause_not";
  @SerializedName(SERIALIZED_NAME_CAUSE_NOT)
  private String causeNot;

  public static final String SERIALIZED_NAME_CAUSE_NOT_CONTAINS = "cause_not_contains";
  @SerializedName(SERIALIZED_NAME_CAUSE_NOT_CONTAINS)
  private String causeNotContains;

  public static final String SERIALIZED_NAME_CAUSE_NOT_ENDS_WITH = "cause_not_ends_with";
  @SerializedName(SERIALIZED_NAME_CAUSE_NOT_ENDS_WITH)
  private String causeNotEndsWith;

  public static final String SERIALIZED_NAME_CAUSE_NOT_IN = "cause_not_in";
  @SerializedName(SERIALIZED_NAME_CAUSE_NOT_IN)
  private List<String> causeNotIn = null;

  public static final String SERIALIZED_NAME_CAUSE_NOT_STARTS_WITH = "cause_not_starts_with";
  @SerializedName(SERIALIZED_NAME_CAUSE_NOT_STARTS_WITH)
  private String causeNotStartsWith;

  public static final String SERIALIZED_NAME_CAUSE_STARTS_WITH = "cause_starts_with";
  @SerializedName(SERIALIZED_NAME_CAUSE_STARTS_WITH)
  private String causeStartsWith;

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_DISABLED_NOT = "disabled_not";
  @SerializedName(SERIALIZED_NAME_DISABLED_NOT)
  private Boolean disabledNot;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ID_CONTAINS = "id_contains";
  @SerializedName(SERIALIZED_NAME_ID_CONTAINS)
  private String idContains;

  public static final String SERIALIZED_NAME_ID_ENDS_WITH = "id_ends_with";
  @SerializedName(SERIALIZED_NAME_ID_ENDS_WITH)
  private String idEndsWith;

  public static final String SERIALIZED_NAME_ID_GT = "id_gt";
  @SerializedName(SERIALIZED_NAME_ID_GT)
  private String idGt;

  public static final String SERIALIZED_NAME_ID_GTE = "id_gte";
  @SerializedName(SERIALIZED_NAME_ID_GTE)
  private String idGte;

  public static final String SERIALIZED_NAME_ID_IN = "id_in";
  @SerializedName(SERIALIZED_NAME_ID_IN)
  private List<String> idIn = null;

  public static final String SERIALIZED_NAME_ID_LT = "id_lt";
  @SerializedName(SERIALIZED_NAME_ID_LT)
  private String idLt;

  public static final String SERIALIZED_NAME_ID_LTE = "id_lte";
  @SerializedName(SERIALIZED_NAME_ID_LTE)
  private String idLte;

  public static final String SERIALIZED_NAME_ID_NOT = "id_not";
  @SerializedName(SERIALIZED_NAME_ID_NOT)
  private String idNot;

  public static final String SERIALIZED_NAME_ID_NOT_CONTAINS = "id_not_contains";
  @SerializedName(SERIALIZED_NAME_ID_NOT_CONTAINS)
  private String idNotContains;

  public static final String SERIALIZED_NAME_ID_NOT_ENDS_WITH = "id_not_ends_with";
  @SerializedName(SERIALIZED_NAME_ID_NOT_ENDS_WITH)
  private String idNotEndsWith;

  public static final String SERIALIZED_NAME_ID_NOT_IN = "id_not_in";
  @SerializedName(SERIALIZED_NAME_ID_NOT_IN)
  private List<String> idNotIn = null;

  public static final String SERIALIZED_NAME_ID_NOT_STARTS_WITH = "id_not_starts_with";
  @SerializedName(SERIALIZED_NAME_ID_NOT_STARTS_WITH)
  private String idNotStartsWith;

  public static final String SERIALIZED_NAME_ID_STARTS_WITH = "id_starts_with";
  @SerializedName(SERIALIZED_NAME_ID_STARTS_WITH)
  private String idStartsWith;

  public static final String SERIALIZED_NAME_IMPACT = "impact";
  @SerializedName(SERIALIZED_NAME_IMPACT)
  private String impact;

  public static final String SERIALIZED_NAME_IMPACT_CONTAINS = "impact_contains";
  @SerializedName(SERIALIZED_NAME_IMPACT_CONTAINS)
  private String impactContains;

  public static final String SERIALIZED_NAME_IMPACT_ENDS_WITH = "impact_ends_with";
  @SerializedName(SERIALIZED_NAME_IMPACT_ENDS_WITH)
  private String impactEndsWith;

  public static final String SERIALIZED_NAME_IMPACT_GT = "impact_gt";
  @SerializedName(SERIALIZED_NAME_IMPACT_GT)
  private String impactGt;

  public static final String SERIALIZED_NAME_IMPACT_GTE = "impact_gte";
  @SerializedName(SERIALIZED_NAME_IMPACT_GTE)
  private String impactGte;

  public static final String SERIALIZED_NAME_IMPACT_IN = "impact_in";
  @SerializedName(SERIALIZED_NAME_IMPACT_IN)
  private List<String> impactIn = null;

  public static final String SERIALIZED_NAME_IMPACT_LT = "impact_lt";
  @SerializedName(SERIALIZED_NAME_IMPACT_LT)
  private String impactLt;

  public static final String SERIALIZED_NAME_IMPACT_LTE = "impact_lte";
  @SerializedName(SERIALIZED_NAME_IMPACT_LTE)
  private String impactLte;

  public static final String SERIALIZED_NAME_IMPACT_NOT = "impact_not";
  @SerializedName(SERIALIZED_NAME_IMPACT_NOT)
  private String impactNot;

  public static final String SERIALIZED_NAME_IMPACT_NOT_CONTAINS = "impact_not_contains";
  @SerializedName(SERIALIZED_NAME_IMPACT_NOT_CONTAINS)
  private String impactNotContains;

  public static final String SERIALIZED_NAME_IMPACT_NOT_ENDS_WITH = "impact_not_ends_with";
  @SerializedName(SERIALIZED_NAME_IMPACT_NOT_ENDS_WITH)
  private String impactNotEndsWith;

  public static final String SERIALIZED_NAME_IMPACT_NOT_IN = "impact_not_in";
  @SerializedName(SERIALIZED_NAME_IMPACT_NOT_IN)
  private List<String> impactNotIn = null;

  public static final String SERIALIZED_NAME_IMPACT_NOT_STARTS_WITH = "impact_not_starts_with";
  @SerializedName(SERIALIZED_NAME_IMPACT_NOT_STARTS_WITH)
  private String impactNotStartsWith;

  public static final String SERIALIZED_NAME_IMPACT_STARTS_WITH = "impact_starts_with";
  @SerializedName(SERIALIZED_NAME_IMPACT_STARTS_WITH)
  private String impactStartsWith;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_MESSAGE_CONTAINS = "message_contains";
  @SerializedName(SERIALIZED_NAME_MESSAGE_CONTAINS)
  private String messageContains;

  public static final String SERIALIZED_NAME_MESSAGE_ENDS_WITH = "message_ends_with";
  @SerializedName(SERIALIZED_NAME_MESSAGE_ENDS_WITH)
  private String messageEndsWith;

  public static final String SERIALIZED_NAME_MESSAGE_GT = "message_gt";
  @SerializedName(SERIALIZED_NAME_MESSAGE_GT)
  private String messageGt;

  public static final String SERIALIZED_NAME_MESSAGE_GTE = "message_gte";
  @SerializedName(SERIALIZED_NAME_MESSAGE_GTE)
  private String messageGte;

  public static final String SERIALIZED_NAME_MESSAGE_IN = "message_in";
  @SerializedName(SERIALIZED_NAME_MESSAGE_IN)
  private List<String> messageIn = null;

  public static final String SERIALIZED_NAME_MESSAGE_LT = "message_lt";
  @SerializedName(SERIALIZED_NAME_MESSAGE_LT)
  private String messageLt;

  public static final String SERIALIZED_NAME_MESSAGE_LTE = "message_lte";
  @SerializedName(SERIALIZED_NAME_MESSAGE_LTE)
  private String messageLte;

  public static final String SERIALIZED_NAME_MESSAGE_NOT = "message_not";
  @SerializedName(SERIALIZED_NAME_MESSAGE_NOT)
  private String messageNot;

  public static final String SERIALIZED_NAME_MESSAGE_NOT_CONTAINS = "message_not_contains";
  @SerializedName(SERIALIZED_NAME_MESSAGE_NOT_CONTAINS)
  private String messageNotContains;

  public static final String SERIALIZED_NAME_MESSAGE_NOT_ENDS_WITH = "message_not_ends_with";
  @SerializedName(SERIALIZED_NAME_MESSAGE_NOT_ENDS_WITH)
  private String messageNotEndsWith;

  public static final String SERIALIZED_NAME_MESSAGE_NOT_IN = "message_not_in";
  @SerializedName(SERIALIZED_NAME_MESSAGE_NOT_IN)
  private List<String> messageNotIn = null;

  public static final String SERIALIZED_NAME_MESSAGE_NOT_STARTS_WITH = "message_not_starts_with";
  @SerializedName(SERIALIZED_NAME_MESSAGE_NOT_STARTS_WITH)
  private String messageNotStartsWith;

  public static final String SERIALIZED_NAME_MESSAGE_STARTS_WITH = "message_starts_with";
  @SerializedName(SERIALIZED_NAME_MESSAGE_STARTS_WITH)
  private String messageStartsWith;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAME_CONTAINS = "name_contains";
  @SerializedName(SERIALIZED_NAME_NAME_CONTAINS)
  private String nameContains;

  public static final String SERIALIZED_NAME_NAME_ENDS_WITH = "name_ends_with";
  @SerializedName(SERIALIZED_NAME_NAME_ENDS_WITH)
  private String nameEndsWith;

  public static final String SERIALIZED_NAME_NAME_GT = "name_gt";
  @SerializedName(SERIALIZED_NAME_NAME_GT)
  private String nameGt;

  public static final String SERIALIZED_NAME_NAME_GTE = "name_gte";
  @SerializedName(SERIALIZED_NAME_NAME_GTE)
  private String nameGte;

  public static final String SERIALIZED_NAME_NAME_IN = "name_in";
  @SerializedName(SERIALIZED_NAME_NAME_IN)
  private List<String> nameIn = null;

  public static final String SERIALIZED_NAME_NAME_LT = "name_lt";
  @SerializedName(SERIALIZED_NAME_NAME_LT)
  private String nameLt;

  public static final String SERIALIZED_NAME_NAME_LTE = "name_lte";
  @SerializedName(SERIALIZED_NAME_NAME_LTE)
  private String nameLte;

  public static final String SERIALIZED_NAME_NAME_NOT = "name_not";
  @SerializedName(SERIALIZED_NAME_NAME_NOT)
  private String nameNot;

  public static final String SERIALIZED_NAME_NAME_NOT_CONTAINS = "name_not_contains";
  @SerializedName(SERIALIZED_NAME_NAME_NOT_CONTAINS)
  private String nameNotContains;

  public static final String SERIALIZED_NAME_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  @SerializedName(SERIALIZED_NAME_NAME_NOT_ENDS_WITH)
  private String nameNotEndsWith;

  public static final String SERIALIZED_NAME_NAME_NOT_IN = "name_not_in";
  @SerializedName(SERIALIZED_NAME_NAME_NOT_IN)
  private List<String> nameNotIn = null;

  public static final String SERIALIZED_NAME_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  @SerializedName(SERIALIZED_NAME_NAME_NOT_STARTS_WITH)
  private String nameNotStartsWith;

  public static final String SERIALIZED_NAME_NAME_STARTS_WITH = "name_starts_with";
  @SerializedName(SERIALIZED_NAME_NAME_STARTS_WITH)
  private String nameStartsWith;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private AlertRuleObject _object;

  public static final String SERIALIZED_NAME_OBJECT_IN = "object_in";
  @SerializedName(SERIALIZED_NAME_OBJECT_IN)
  private List<AlertRuleObject> objectIn = null;

  public static final String SERIALIZED_NAME_OBJECT_NOT = "object_not";
  @SerializedName(SERIALIZED_NAME_OBJECT_NOT)
  private AlertRuleObject objectNot;

  public static final String SERIALIZED_NAME_OBJECT_NOT_IN = "object_not_in";
  @SerializedName(SERIALIZED_NAME_OBJECT_NOT_IN)
  private List<AlertRuleObject> objectNotIn = null;

  public static final String SERIALIZED_NAME_OPERATOR = "operator";
  @SerializedName(SERIALIZED_NAME_OPERATOR)
  private String operator;

  public static final String SERIALIZED_NAME_OPERATOR_CONTAINS = "operator_contains";
  @SerializedName(SERIALIZED_NAME_OPERATOR_CONTAINS)
  private String operatorContains;

  public static final String SERIALIZED_NAME_OPERATOR_ENDS_WITH = "operator_ends_with";
  @SerializedName(SERIALIZED_NAME_OPERATOR_ENDS_WITH)
  private String operatorEndsWith;

  public static final String SERIALIZED_NAME_OPERATOR_GT = "operator_gt";
  @SerializedName(SERIALIZED_NAME_OPERATOR_GT)
  private String operatorGt;

  public static final String SERIALIZED_NAME_OPERATOR_GTE = "operator_gte";
  @SerializedName(SERIALIZED_NAME_OPERATOR_GTE)
  private String operatorGte;

  public static final String SERIALIZED_NAME_OPERATOR_IN = "operator_in";
  @SerializedName(SERIALIZED_NAME_OPERATOR_IN)
  private List<String> operatorIn = null;

  public static final String SERIALIZED_NAME_OPERATOR_LT = "operator_lt";
  @SerializedName(SERIALIZED_NAME_OPERATOR_LT)
  private String operatorLt;

  public static final String SERIALIZED_NAME_OPERATOR_LTE = "operator_lte";
  @SerializedName(SERIALIZED_NAME_OPERATOR_LTE)
  private String operatorLte;

  public static final String SERIALIZED_NAME_OPERATOR_NOT = "operator_not";
  @SerializedName(SERIALIZED_NAME_OPERATOR_NOT)
  private String operatorNot;

  public static final String SERIALIZED_NAME_OPERATOR_NOT_CONTAINS = "operator_not_contains";
  @SerializedName(SERIALIZED_NAME_OPERATOR_NOT_CONTAINS)
  private String operatorNotContains;

  public static final String SERIALIZED_NAME_OPERATOR_NOT_ENDS_WITH = "operator_not_ends_with";
  @SerializedName(SERIALIZED_NAME_OPERATOR_NOT_ENDS_WITH)
  private String operatorNotEndsWith;

  public static final String SERIALIZED_NAME_OPERATOR_NOT_IN = "operator_not_in";
  @SerializedName(SERIALIZED_NAME_OPERATOR_NOT_IN)
  private List<String> operatorNotIn = null;

  public static final String SERIALIZED_NAME_OPERATOR_NOT_STARTS_WITH = "operator_not_starts_with";
  @SerializedName(SERIALIZED_NAME_OPERATOR_NOT_STARTS_WITH)
  private String operatorNotStartsWith;

  public static final String SERIALIZED_NAME_OPERATOR_STARTS_WITH = "operator_starts_with";
  @SerializedName(SERIALIZED_NAME_OPERATOR_STARTS_WITH)
  private String operatorStartsWith;

  public static final String SERIALIZED_NAME_SOLUTION = "solution";
  @SerializedName(SERIALIZED_NAME_SOLUTION)
  private String solution;

  public static final String SERIALIZED_NAME_SOLUTION_CONTAINS = "solution_contains";
  @SerializedName(SERIALIZED_NAME_SOLUTION_CONTAINS)
  private String solutionContains;

  public static final String SERIALIZED_NAME_SOLUTION_ENDS_WITH = "solution_ends_with";
  @SerializedName(SERIALIZED_NAME_SOLUTION_ENDS_WITH)
  private String solutionEndsWith;

  public static final String SERIALIZED_NAME_SOLUTION_GT = "solution_gt";
  @SerializedName(SERIALIZED_NAME_SOLUTION_GT)
  private String solutionGt;

  public static final String SERIALIZED_NAME_SOLUTION_GTE = "solution_gte";
  @SerializedName(SERIALIZED_NAME_SOLUTION_GTE)
  private String solutionGte;

  public static final String SERIALIZED_NAME_SOLUTION_IN = "solution_in";
  @SerializedName(SERIALIZED_NAME_SOLUTION_IN)
  private List<String> solutionIn = null;

  public static final String SERIALIZED_NAME_SOLUTION_LT = "solution_lt";
  @SerializedName(SERIALIZED_NAME_SOLUTION_LT)
  private String solutionLt;

  public static final String SERIALIZED_NAME_SOLUTION_LTE = "solution_lte";
  @SerializedName(SERIALIZED_NAME_SOLUTION_LTE)
  private String solutionLte;

  public static final String SERIALIZED_NAME_SOLUTION_NOT = "solution_not";
  @SerializedName(SERIALIZED_NAME_SOLUTION_NOT)
  private String solutionNot;

  public static final String SERIALIZED_NAME_SOLUTION_NOT_CONTAINS = "solution_not_contains";
  @SerializedName(SERIALIZED_NAME_SOLUTION_NOT_CONTAINS)
  private String solutionNotContains;

  public static final String SERIALIZED_NAME_SOLUTION_NOT_ENDS_WITH = "solution_not_ends_with";
  @SerializedName(SERIALIZED_NAME_SOLUTION_NOT_ENDS_WITH)
  private String solutionNotEndsWith;

  public static final String SERIALIZED_NAME_SOLUTION_NOT_IN = "solution_not_in";
  @SerializedName(SERIALIZED_NAME_SOLUTION_NOT_IN)
  private List<String> solutionNotIn = null;

  public static final String SERIALIZED_NAME_SOLUTION_NOT_STARTS_WITH = "solution_not_starts_with";
  @SerializedName(SERIALIZED_NAME_SOLUTION_NOT_STARTS_WITH)
  private String solutionNotStartsWith;

  public static final String SERIALIZED_NAME_SOLUTION_STARTS_WITH = "solution_starts_with";
  @SerializedName(SERIALIZED_NAME_SOLUTION_STARTS_WITH)
  private String solutionStartsWith;

  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private AlertRuleUnit unit;

  public static final String SERIALIZED_NAME_UNIT_IN = "unit_in";
  @SerializedName(SERIALIZED_NAME_UNIT_IN)
  private List<AlertRuleUnit> unitIn = null;

  public static final String SERIALIZED_NAME_UNIT_NOT = "unit_not";
  @SerializedName(SERIALIZED_NAME_UNIT_NOT)
  private AlertRuleUnit unitNot;

  public static final String SERIALIZED_NAME_UNIT_NOT_IN = "unit_not_in";
  @SerializedName(SERIALIZED_NAME_UNIT_NOT_IN)
  private List<AlertRuleUnit> unitNotIn = null;

  public GlobalAlertRuleWhereInput() { 
  }

  public GlobalAlertRuleWhereInput AND(List<GlobalAlertRuleWhereInput> AND) {
    
    this.AND = AND;
    return this;
  }

  public GlobalAlertRuleWhereInput addANDItem(GlobalAlertRuleWhereInput ANDItem) {
    if (this.AND == null) {
      this.AND = new ArrayList<GlobalAlertRuleWhereInput>();
    }
    this.AND.add(ANDItem);
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<GlobalAlertRuleWhereInput> getAND() {
    return AND;
  }


  public void setAND(List<GlobalAlertRuleWhereInput> AND) {
    this.AND = AND;
  }


  public GlobalAlertRuleWhereInput NOT(List<GlobalAlertRuleWhereInput> NOT) {
    
    this.NOT = NOT;
    return this;
  }

  public GlobalAlertRuleWhereInput addNOTItem(GlobalAlertRuleWhereInput NOTItem) {
    if (this.NOT == null) {
      this.NOT = new ArrayList<GlobalAlertRuleWhereInput>();
    }
    this.NOT.add(NOTItem);
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<GlobalAlertRuleWhereInput> getNOT() {
    return NOT;
  }


  public void setNOT(List<GlobalAlertRuleWhereInput> NOT) {
    this.NOT = NOT;
  }


  public GlobalAlertRuleWhereInput OR(List<GlobalAlertRuleWhereInput> OR) {
    
    this.OR = OR;
    return this;
  }

  public GlobalAlertRuleWhereInput addORItem(GlobalAlertRuleWhereInput ORItem) {
    if (this.OR == null) {
      this.OR = new ArrayList<GlobalAlertRuleWhereInput>();
    }
    this.OR.add(ORItem);
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<GlobalAlertRuleWhereInput> getOR() {
    return OR;
  }


  public void setOR(List<GlobalAlertRuleWhereInput> OR) {
    this.OR = OR;
  }


  public GlobalAlertRuleWhereInput alertRulesEvery(AlertRuleWhereInput alertRulesEvery) {
    
    this.alertRulesEvery = alertRulesEvery;
    return this;
  }

   /**
   * Get alertRulesEvery
   * @return alertRulesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AlertRuleWhereInput getAlertRulesEvery() {
    return alertRulesEvery;
  }


  public void setAlertRulesEvery(AlertRuleWhereInput alertRulesEvery) {
    this.alertRulesEvery = alertRulesEvery;
  }


  public GlobalAlertRuleWhereInput alertRulesNone(AlertRuleWhereInput alertRulesNone) {
    
    this.alertRulesNone = alertRulesNone;
    return this;
  }

   /**
   * Get alertRulesNone
   * @return alertRulesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AlertRuleWhereInput getAlertRulesNone() {
    return alertRulesNone;
  }


  public void setAlertRulesNone(AlertRuleWhereInput alertRulesNone) {
    this.alertRulesNone = alertRulesNone;
  }


  public GlobalAlertRuleWhereInput alertRulesSome(AlertRuleWhereInput alertRulesSome) {
    
    this.alertRulesSome = alertRulesSome;
    return this;
  }

   /**
   * Get alertRulesSome
   * @return alertRulesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AlertRuleWhereInput getAlertRulesSome() {
    return alertRulesSome;
  }


  public void setAlertRulesSome(AlertRuleWhereInput alertRulesSome) {
    this.alertRulesSome = alertRulesSome;
  }


  public GlobalAlertRuleWhereInput _boolean(Boolean _boolean) {
    
    this._boolean = _boolean;
    return this;
  }

   /**
   * Get _boolean
   * @return _boolean
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBoolean() {
    return _boolean;
  }


  public void setBoolean(Boolean _boolean) {
    this._boolean = _boolean;
  }


  public GlobalAlertRuleWhereInput booleanNot(Boolean booleanNot) {
    
    this.booleanNot = booleanNot;
    return this;
  }

   /**
   * Get booleanNot
   * @return booleanNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBooleanNot() {
    return booleanNot;
  }


  public void setBooleanNot(Boolean booleanNot) {
    this.booleanNot = booleanNot;
  }


  public GlobalAlertRuleWhereInput cause(String cause) {
    
    this.cause = cause;
    return this;
  }

   /**
   * Get cause
   * @return cause
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCause() {
    return cause;
  }


  public void setCause(String cause) {
    this.cause = cause;
  }


  public GlobalAlertRuleWhereInput causeContains(String causeContains) {
    
    this.causeContains = causeContains;
    return this;
  }

   /**
   * Get causeContains
   * @return causeContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseContains() {
    return causeContains;
  }


  public void setCauseContains(String causeContains) {
    this.causeContains = causeContains;
  }


  public GlobalAlertRuleWhereInput causeEndsWith(String causeEndsWith) {
    
    this.causeEndsWith = causeEndsWith;
    return this;
  }

   /**
   * Get causeEndsWith
   * @return causeEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseEndsWith() {
    return causeEndsWith;
  }


  public void setCauseEndsWith(String causeEndsWith) {
    this.causeEndsWith = causeEndsWith;
  }


  public GlobalAlertRuleWhereInput causeGt(String causeGt) {
    
    this.causeGt = causeGt;
    return this;
  }

   /**
   * Get causeGt
   * @return causeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseGt() {
    return causeGt;
  }


  public void setCauseGt(String causeGt) {
    this.causeGt = causeGt;
  }


  public GlobalAlertRuleWhereInput causeGte(String causeGte) {
    
    this.causeGte = causeGte;
    return this;
  }

   /**
   * Get causeGte
   * @return causeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseGte() {
    return causeGte;
  }


  public void setCauseGte(String causeGte) {
    this.causeGte = causeGte;
  }


  public GlobalAlertRuleWhereInput causeIn(List<String> causeIn) {
    
    this.causeIn = causeIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addCauseInItem(String causeInItem) {
    if (this.causeIn == null) {
      this.causeIn = new ArrayList<String>();
    }
    this.causeIn.add(causeInItem);
    return this;
  }

   /**
   * Get causeIn
   * @return causeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCauseIn() {
    return causeIn;
  }


  public void setCauseIn(List<String> causeIn) {
    this.causeIn = causeIn;
  }


  public GlobalAlertRuleWhereInput causeLt(String causeLt) {
    
    this.causeLt = causeLt;
    return this;
  }

   /**
   * Get causeLt
   * @return causeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseLt() {
    return causeLt;
  }


  public void setCauseLt(String causeLt) {
    this.causeLt = causeLt;
  }


  public GlobalAlertRuleWhereInput causeLte(String causeLte) {
    
    this.causeLte = causeLte;
    return this;
  }

   /**
   * Get causeLte
   * @return causeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseLte() {
    return causeLte;
  }


  public void setCauseLte(String causeLte) {
    this.causeLte = causeLte;
  }


  public GlobalAlertRuleWhereInput causeNot(String causeNot) {
    
    this.causeNot = causeNot;
    return this;
  }

   /**
   * Get causeNot
   * @return causeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseNot() {
    return causeNot;
  }


  public void setCauseNot(String causeNot) {
    this.causeNot = causeNot;
  }


  public GlobalAlertRuleWhereInput causeNotContains(String causeNotContains) {
    
    this.causeNotContains = causeNotContains;
    return this;
  }

   /**
   * Get causeNotContains
   * @return causeNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseNotContains() {
    return causeNotContains;
  }


  public void setCauseNotContains(String causeNotContains) {
    this.causeNotContains = causeNotContains;
  }


  public GlobalAlertRuleWhereInput causeNotEndsWith(String causeNotEndsWith) {
    
    this.causeNotEndsWith = causeNotEndsWith;
    return this;
  }

   /**
   * Get causeNotEndsWith
   * @return causeNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseNotEndsWith() {
    return causeNotEndsWith;
  }


  public void setCauseNotEndsWith(String causeNotEndsWith) {
    this.causeNotEndsWith = causeNotEndsWith;
  }


  public GlobalAlertRuleWhereInput causeNotIn(List<String> causeNotIn) {
    
    this.causeNotIn = causeNotIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addCauseNotInItem(String causeNotInItem) {
    if (this.causeNotIn == null) {
      this.causeNotIn = new ArrayList<String>();
    }
    this.causeNotIn.add(causeNotInItem);
    return this;
  }

   /**
   * Get causeNotIn
   * @return causeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCauseNotIn() {
    return causeNotIn;
  }


  public void setCauseNotIn(List<String> causeNotIn) {
    this.causeNotIn = causeNotIn;
  }


  public GlobalAlertRuleWhereInput causeNotStartsWith(String causeNotStartsWith) {
    
    this.causeNotStartsWith = causeNotStartsWith;
    return this;
  }

   /**
   * Get causeNotStartsWith
   * @return causeNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseNotStartsWith() {
    return causeNotStartsWith;
  }


  public void setCauseNotStartsWith(String causeNotStartsWith) {
    this.causeNotStartsWith = causeNotStartsWith;
  }


  public GlobalAlertRuleWhereInput causeStartsWith(String causeStartsWith) {
    
    this.causeStartsWith = causeStartsWith;
    return this;
  }

   /**
   * Get causeStartsWith
   * @return causeStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCauseStartsWith() {
    return causeStartsWith;
  }


  public void setCauseStartsWith(String causeStartsWith) {
    this.causeStartsWith = causeStartsWith;
  }


  public GlobalAlertRuleWhereInput disabled(Boolean disabled) {
    
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDisabled() {
    return disabled;
  }


  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public GlobalAlertRuleWhereInput disabledNot(Boolean disabledNot) {
    
    this.disabledNot = disabledNot;
    return this;
  }

   /**
   * Get disabledNot
   * @return disabledNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDisabledNot() {
    return disabledNot;
  }


  public void setDisabledNot(Boolean disabledNot) {
    this.disabledNot = disabledNot;
  }


  public GlobalAlertRuleWhereInput id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public GlobalAlertRuleWhereInput idContains(String idContains) {
    
    this.idContains = idContains;
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdContains() {
    return idContains;
  }


  public void setIdContains(String idContains) {
    this.idContains = idContains;
  }


  public GlobalAlertRuleWhereInput idEndsWith(String idEndsWith) {
    
    this.idEndsWith = idEndsWith;
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdEndsWith() {
    return idEndsWith;
  }


  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = idEndsWith;
  }


  public GlobalAlertRuleWhereInput idGt(String idGt) {
    
    this.idGt = idGt;
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdGt() {
    return idGt;
  }


  public void setIdGt(String idGt) {
    this.idGt = idGt;
  }


  public GlobalAlertRuleWhereInput idGte(String idGte) {
    
    this.idGte = idGte;
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdGte() {
    return idGte;
  }


  public void setIdGte(String idGte) {
    this.idGte = idGte;
  }


  public GlobalAlertRuleWhereInput idIn(List<String> idIn) {
    
    this.idIn = idIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null) {
      this.idIn = new ArrayList<String>();
    }
    this.idIn.add(idInItem);
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIdIn() {
    return idIn;
  }


  public void setIdIn(List<String> idIn) {
    this.idIn = idIn;
  }


  public GlobalAlertRuleWhereInput idLt(String idLt) {
    
    this.idLt = idLt;
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdLt() {
    return idLt;
  }


  public void setIdLt(String idLt) {
    this.idLt = idLt;
  }


  public GlobalAlertRuleWhereInput idLte(String idLte) {
    
    this.idLte = idLte;
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdLte() {
    return idLte;
  }


  public void setIdLte(String idLte) {
    this.idLte = idLte;
  }


  public GlobalAlertRuleWhereInput idNot(String idNot) {
    
    this.idNot = idNot;
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdNot() {
    return idNot;
  }


  public void setIdNot(String idNot) {
    this.idNot = idNot;
  }


  public GlobalAlertRuleWhereInput idNotContains(String idNotContains) {
    
    this.idNotContains = idNotContains;
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdNotContains() {
    return idNotContains;
  }


  public void setIdNotContains(String idNotContains) {
    this.idNotContains = idNotContains;
  }


  public GlobalAlertRuleWhereInput idNotEndsWith(String idNotEndsWith) {
    
    this.idNotEndsWith = idNotEndsWith;
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdNotEndsWith() {
    return idNotEndsWith;
  }


  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }


  public GlobalAlertRuleWhereInput idNotIn(List<String> idNotIn) {
    
    this.idNotIn = idNotIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null) {
      this.idNotIn = new ArrayList<String>();
    }
    this.idNotIn.add(idNotInItem);
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIdNotIn() {
    return idNotIn;
  }


  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = idNotIn;
  }


  public GlobalAlertRuleWhereInput idNotStartsWith(String idNotStartsWith) {
    
    this.idNotStartsWith = idNotStartsWith;
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdNotStartsWith() {
    return idNotStartsWith;
  }


  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }


  public GlobalAlertRuleWhereInput idStartsWith(String idStartsWith) {
    
    this.idStartsWith = idStartsWith;
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdStartsWith() {
    return idStartsWith;
  }


  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = idStartsWith;
  }


  public GlobalAlertRuleWhereInput impact(String impact) {
    
    this.impact = impact;
    return this;
  }

   /**
   * Get impact
   * @return impact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpact() {
    return impact;
  }


  public void setImpact(String impact) {
    this.impact = impact;
  }


  public GlobalAlertRuleWhereInput impactContains(String impactContains) {
    
    this.impactContains = impactContains;
    return this;
  }

   /**
   * Get impactContains
   * @return impactContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactContains() {
    return impactContains;
  }


  public void setImpactContains(String impactContains) {
    this.impactContains = impactContains;
  }


  public GlobalAlertRuleWhereInput impactEndsWith(String impactEndsWith) {
    
    this.impactEndsWith = impactEndsWith;
    return this;
  }

   /**
   * Get impactEndsWith
   * @return impactEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactEndsWith() {
    return impactEndsWith;
  }


  public void setImpactEndsWith(String impactEndsWith) {
    this.impactEndsWith = impactEndsWith;
  }


  public GlobalAlertRuleWhereInput impactGt(String impactGt) {
    
    this.impactGt = impactGt;
    return this;
  }

   /**
   * Get impactGt
   * @return impactGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactGt() {
    return impactGt;
  }


  public void setImpactGt(String impactGt) {
    this.impactGt = impactGt;
  }


  public GlobalAlertRuleWhereInput impactGte(String impactGte) {
    
    this.impactGte = impactGte;
    return this;
  }

   /**
   * Get impactGte
   * @return impactGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactGte() {
    return impactGte;
  }


  public void setImpactGte(String impactGte) {
    this.impactGte = impactGte;
  }


  public GlobalAlertRuleWhereInput impactIn(List<String> impactIn) {
    
    this.impactIn = impactIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addImpactInItem(String impactInItem) {
    if (this.impactIn == null) {
      this.impactIn = new ArrayList<String>();
    }
    this.impactIn.add(impactInItem);
    return this;
  }

   /**
   * Get impactIn
   * @return impactIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getImpactIn() {
    return impactIn;
  }


  public void setImpactIn(List<String> impactIn) {
    this.impactIn = impactIn;
  }


  public GlobalAlertRuleWhereInput impactLt(String impactLt) {
    
    this.impactLt = impactLt;
    return this;
  }

   /**
   * Get impactLt
   * @return impactLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactLt() {
    return impactLt;
  }


  public void setImpactLt(String impactLt) {
    this.impactLt = impactLt;
  }


  public GlobalAlertRuleWhereInput impactLte(String impactLte) {
    
    this.impactLte = impactLte;
    return this;
  }

   /**
   * Get impactLte
   * @return impactLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactLte() {
    return impactLte;
  }


  public void setImpactLte(String impactLte) {
    this.impactLte = impactLte;
  }


  public GlobalAlertRuleWhereInput impactNot(String impactNot) {
    
    this.impactNot = impactNot;
    return this;
  }

   /**
   * Get impactNot
   * @return impactNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactNot() {
    return impactNot;
  }


  public void setImpactNot(String impactNot) {
    this.impactNot = impactNot;
  }


  public GlobalAlertRuleWhereInput impactNotContains(String impactNotContains) {
    
    this.impactNotContains = impactNotContains;
    return this;
  }

   /**
   * Get impactNotContains
   * @return impactNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactNotContains() {
    return impactNotContains;
  }


  public void setImpactNotContains(String impactNotContains) {
    this.impactNotContains = impactNotContains;
  }


  public GlobalAlertRuleWhereInput impactNotEndsWith(String impactNotEndsWith) {
    
    this.impactNotEndsWith = impactNotEndsWith;
    return this;
  }

   /**
   * Get impactNotEndsWith
   * @return impactNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactNotEndsWith() {
    return impactNotEndsWith;
  }


  public void setImpactNotEndsWith(String impactNotEndsWith) {
    this.impactNotEndsWith = impactNotEndsWith;
  }


  public GlobalAlertRuleWhereInput impactNotIn(List<String> impactNotIn) {
    
    this.impactNotIn = impactNotIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addImpactNotInItem(String impactNotInItem) {
    if (this.impactNotIn == null) {
      this.impactNotIn = new ArrayList<String>();
    }
    this.impactNotIn.add(impactNotInItem);
    return this;
  }

   /**
   * Get impactNotIn
   * @return impactNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getImpactNotIn() {
    return impactNotIn;
  }


  public void setImpactNotIn(List<String> impactNotIn) {
    this.impactNotIn = impactNotIn;
  }


  public GlobalAlertRuleWhereInput impactNotStartsWith(String impactNotStartsWith) {
    
    this.impactNotStartsWith = impactNotStartsWith;
    return this;
  }

   /**
   * Get impactNotStartsWith
   * @return impactNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactNotStartsWith() {
    return impactNotStartsWith;
  }


  public void setImpactNotStartsWith(String impactNotStartsWith) {
    this.impactNotStartsWith = impactNotStartsWith;
  }


  public GlobalAlertRuleWhereInput impactStartsWith(String impactStartsWith) {
    
    this.impactStartsWith = impactStartsWith;
    return this;
  }

   /**
   * Get impactStartsWith
   * @return impactStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImpactStartsWith() {
    return impactStartsWith;
  }


  public void setImpactStartsWith(String impactStartsWith) {
    this.impactStartsWith = impactStartsWith;
  }


  public GlobalAlertRuleWhereInput message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public GlobalAlertRuleWhereInput messageContains(String messageContains) {
    
    this.messageContains = messageContains;
    return this;
  }

   /**
   * Get messageContains
   * @return messageContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageContains() {
    return messageContains;
  }


  public void setMessageContains(String messageContains) {
    this.messageContains = messageContains;
  }


  public GlobalAlertRuleWhereInput messageEndsWith(String messageEndsWith) {
    
    this.messageEndsWith = messageEndsWith;
    return this;
  }

   /**
   * Get messageEndsWith
   * @return messageEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageEndsWith() {
    return messageEndsWith;
  }


  public void setMessageEndsWith(String messageEndsWith) {
    this.messageEndsWith = messageEndsWith;
  }


  public GlobalAlertRuleWhereInput messageGt(String messageGt) {
    
    this.messageGt = messageGt;
    return this;
  }

   /**
   * Get messageGt
   * @return messageGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageGt() {
    return messageGt;
  }


  public void setMessageGt(String messageGt) {
    this.messageGt = messageGt;
  }


  public GlobalAlertRuleWhereInput messageGte(String messageGte) {
    
    this.messageGte = messageGte;
    return this;
  }

   /**
   * Get messageGte
   * @return messageGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageGte() {
    return messageGte;
  }


  public void setMessageGte(String messageGte) {
    this.messageGte = messageGte;
  }


  public GlobalAlertRuleWhereInput messageIn(List<String> messageIn) {
    
    this.messageIn = messageIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addMessageInItem(String messageInItem) {
    if (this.messageIn == null) {
      this.messageIn = new ArrayList<String>();
    }
    this.messageIn.add(messageInItem);
    return this;
  }

   /**
   * Get messageIn
   * @return messageIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getMessageIn() {
    return messageIn;
  }


  public void setMessageIn(List<String> messageIn) {
    this.messageIn = messageIn;
  }


  public GlobalAlertRuleWhereInput messageLt(String messageLt) {
    
    this.messageLt = messageLt;
    return this;
  }

   /**
   * Get messageLt
   * @return messageLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageLt() {
    return messageLt;
  }


  public void setMessageLt(String messageLt) {
    this.messageLt = messageLt;
  }


  public GlobalAlertRuleWhereInput messageLte(String messageLte) {
    
    this.messageLte = messageLte;
    return this;
  }

   /**
   * Get messageLte
   * @return messageLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageLte() {
    return messageLte;
  }


  public void setMessageLte(String messageLte) {
    this.messageLte = messageLte;
  }


  public GlobalAlertRuleWhereInput messageNot(String messageNot) {
    
    this.messageNot = messageNot;
    return this;
  }

   /**
   * Get messageNot
   * @return messageNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageNot() {
    return messageNot;
  }


  public void setMessageNot(String messageNot) {
    this.messageNot = messageNot;
  }


  public GlobalAlertRuleWhereInput messageNotContains(String messageNotContains) {
    
    this.messageNotContains = messageNotContains;
    return this;
  }

   /**
   * Get messageNotContains
   * @return messageNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageNotContains() {
    return messageNotContains;
  }


  public void setMessageNotContains(String messageNotContains) {
    this.messageNotContains = messageNotContains;
  }


  public GlobalAlertRuleWhereInput messageNotEndsWith(String messageNotEndsWith) {
    
    this.messageNotEndsWith = messageNotEndsWith;
    return this;
  }

   /**
   * Get messageNotEndsWith
   * @return messageNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageNotEndsWith() {
    return messageNotEndsWith;
  }


  public void setMessageNotEndsWith(String messageNotEndsWith) {
    this.messageNotEndsWith = messageNotEndsWith;
  }


  public GlobalAlertRuleWhereInput messageNotIn(List<String> messageNotIn) {
    
    this.messageNotIn = messageNotIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addMessageNotInItem(String messageNotInItem) {
    if (this.messageNotIn == null) {
      this.messageNotIn = new ArrayList<String>();
    }
    this.messageNotIn.add(messageNotInItem);
    return this;
  }

   /**
   * Get messageNotIn
   * @return messageNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getMessageNotIn() {
    return messageNotIn;
  }


  public void setMessageNotIn(List<String> messageNotIn) {
    this.messageNotIn = messageNotIn;
  }


  public GlobalAlertRuleWhereInput messageNotStartsWith(String messageNotStartsWith) {
    
    this.messageNotStartsWith = messageNotStartsWith;
    return this;
  }

   /**
   * Get messageNotStartsWith
   * @return messageNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageNotStartsWith() {
    return messageNotStartsWith;
  }


  public void setMessageNotStartsWith(String messageNotStartsWith) {
    this.messageNotStartsWith = messageNotStartsWith;
  }


  public GlobalAlertRuleWhereInput messageStartsWith(String messageStartsWith) {
    
    this.messageStartsWith = messageStartsWith;
    return this;
  }

   /**
   * Get messageStartsWith
   * @return messageStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessageStartsWith() {
    return messageStartsWith;
  }


  public void setMessageStartsWith(String messageStartsWith) {
    this.messageStartsWith = messageStartsWith;
  }


  public GlobalAlertRuleWhereInput name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GlobalAlertRuleWhereInput nameContains(String nameContains) {
    
    this.nameContains = nameContains;
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameContains() {
    return nameContains;
  }


  public void setNameContains(String nameContains) {
    this.nameContains = nameContains;
  }


  public GlobalAlertRuleWhereInput nameEndsWith(String nameEndsWith) {
    
    this.nameEndsWith = nameEndsWith;
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameEndsWith() {
    return nameEndsWith;
  }


  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }


  public GlobalAlertRuleWhereInput nameGt(String nameGt) {
    
    this.nameGt = nameGt;
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameGt() {
    return nameGt;
  }


  public void setNameGt(String nameGt) {
    this.nameGt = nameGt;
  }


  public GlobalAlertRuleWhereInput nameGte(String nameGte) {
    
    this.nameGte = nameGte;
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameGte() {
    return nameGte;
  }


  public void setNameGte(String nameGte) {
    this.nameGte = nameGte;
  }


  public GlobalAlertRuleWhereInput nameIn(List<String> nameIn) {
    
    this.nameIn = nameIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null) {
      this.nameIn = new ArrayList<String>();
    }
    this.nameIn.add(nameInItem);
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getNameIn() {
    return nameIn;
  }


  public void setNameIn(List<String> nameIn) {
    this.nameIn = nameIn;
  }


  public GlobalAlertRuleWhereInput nameLt(String nameLt) {
    
    this.nameLt = nameLt;
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameLt() {
    return nameLt;
  }


  public void setNameLt(String nameLt) {
    this.nameLt = nameLt;
  }


  public GlobalAlertRuleWhereInput nameLte(String nameLte) {
    
    this.nameLte = nameLte;
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameLte() {
    return nameLte;
  }


  public void setNameLte(String nameLte) {
    this.nameLte = nameLte;
  }


  public GlobalAlertRuleWhereInput nameNot(String nameNot) {
    
    this.nameNot = nameNot;
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameNot() {
    return nameNot;
  }


  public void setNameNot(String nameNot) {
    this.nameNot = nameNot;
  }


  public GlobalAlertRuleWhereInput nameNotContains(String nameNotContains) {
    
    this.nameNotContains = nameNotContains;
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameNotContains() {
    return nameNotContains;
  }


  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = nameNotContains;
  }


  public GlobalAlertRuleWhereInput nameNotEndsWith(String nameNotEndsWith) {
    
    this.nameNotEndsWith = nameNotEndsWith;
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameNotEndsWith() {
    return nameNotEndsWith;
  }


  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }


  public GlobalAlertRuleWhereInput nameNotIn(List<String> nameNotIn) {
    
    this.nameNotIn = nameNotIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null) {
      this.nameNotIn = new ArrayList<String>();
    }
    this.nameNotIn.add(nameNotInItem);
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getNameNotIn() {
    return nameNotIn;
  }


  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }


  public GlobalAlertRuleWhereInput nameNotStartsWith(String nameNotStartsWith) {
    
    this.nameNotStartsWith = nameNotStartsWith;
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameNotStartsWith() {
    return nameNotStartsWith;
  }


  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }


  public GlobalAlertRuleWhereInput nameStartsWith(String nameStartsWith) {
    
    this.nameStartsWith = nameStartsWith;
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameStartsWith() {
    return nameStartsWith;
  }


  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }


  public GlobalAlertRuleWhereInput _object(AlertRuleObject _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * Get _object
   * @return _object
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AlertRuleObject getObject() {
    return _object;
  }


  public void setObject(AlertRuleObject _object) {
    this._object = _object;
  }


  public GlobalAlertRuleWhereInput objectIn(List<AlertRuleObject> objectIn) {
    
    this.objectIn = objectIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addObjectInItem(AlertRuleObject objectInItem) {
    if (this.objectIn == null) {
      this.objectIn = new ArrayList<AlertRuleObject>();
    }
    this.objectIn.add(objectInItem);
    return this;
  }

   /**
   * Get objectIn
   * @return objectIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AlertRuleObject> getObjectIn() {
    return objectIn;
  }


  public void setObjectIn(List<AlertRuleObject> objectIn) {
    this.objectIn = objectIn;
  }


  public GlobalAlertRuleWhereInput objectNot(AlertRuleObject objectNot) {
    
    this.objectNot = objectNot;
    return this;
  }

   /**
   * Get objectNot
   * @return objectNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AlertRuleObject getObjectNot() {
    return objectNot;
  }


  public void setObjectNot(AlertRuleObject objectNot) {
    this.objectNot = objectNot;
  }


  public GlobalAlertRuleWhereInput objectNotIn(List<AlertRuleObject> objectNotIn) {
    
    this.objectNotIn = objectNotIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addObjectNotInItem(AlertRuleObject objectNotInItem) {
    if (this.objectNotIn == null) {
      this.objectNotIn = new ArrayList<AlertRuleObject>();
    }
    this.objectNotIn.add(objectNotInItem);
    return this;
  }

   /**
   * Get objectNotIn
   * @return objectNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AlertRuleObject> getObjectNotIn() {
    return objectNotIn;
  }


  public void setObjectNotIn(List<AlertRuleObject> objectNotIn) {
    this.objectNotIn = objectNotIn;
  }


  public GlobalAlertRuleWhereInput operator(String operator) {
    
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperator() {
    return operator;
  }


  public void setOperator(String operator) {
    this.operator = operator;
  }


  public GlobalAlertRuleWhereInput operatorContains(String operatorContains) {
    
    this.operatorContains = operatorContains;
    return this;
  }

   /**
   * Get operatorContains
   * @return operatorContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorContains() {
    return operatorContains;
  }


  public void setOperatorContains(String operatorContains) {
    this.operatorContains = operatorContains;
  }


  public GlobalAlertRuleWhereInput operatorEndsWith(String operatorEndsWith) {
    
    this.operatorEndsWith = operatorEndsWith;
    return this;
  }

   /**
   * Get operatorEndsWith
   * @return operatorEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorEndsWith() {
    return operatorEndsWith;
  }


  public void setOperatorEndsWith(String operatorEndsWith) {
    this.operatorEndsWith = operatorEndsWith;
  }


  public GlobalAlertRuleWhereInput operatorGt(String operatorGt) {
    
    this.operatorGt = operatorGt;
    return this;
  }

   /**
   * Get operatorGt
   * @return operatorGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorGt() {
    return operatorGt;
  }


  public void setOperatorGt(String operatorGt) {
    this.operatorGt = operatorGt;
  }


  public GlobalAlertRuleWhereInput operatorGte(String operatorGte) {
    
    this.operatorGte = operatorGte;
    return this;
  }

   /**
   * Get operatorGte
   * @return operatorGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorGte() {
    return operatorGte;
  }


  public void setOperatorGte(String operatorGte) {
    this.operatorGte = operatorGte;
  }


  public GlobalAlertRuleWhereInput operatorIn(List<String> operatorIn) {
    
    this.operatorIn = operatorIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addOperatorInItem(String operatorInItem) {
    if (this.operatorIn == null) {
      this.operatorIn = new ArrayList<String>();
    }
    this.operatorIn.add(operatorInItem);
    return this;
  }

   /**
   * Get operatorIn
   * @return operatorIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getOperatorIn() {
    return operatorIn;
  }


  public void setOperatorIn(List<String> operatorIn) {
    this.operatorIn = operatorIn;
  }


  public GlobalAlertRuleWhereInput operatorLt(String operatorLt) {
    
    this.operatorLt = operatorLt;
    return this;
  }

   /**
   * Get operatorLt
   * @return operatorLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorLt() {
    return operatorLt;
  }


  public void setOperatorLt(String operatorLt) {
    this.operatorLt = operatorLt;
  }


  public GlobalAlertRuleWhereInput operatorLte(String operatorLte) {
    
    this.operatorLte = operatorLte;
    return this;
  }

   /**
   * Get operatorLte
   * @return operatorLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorLte() {
    return operatorLte;
  }


  public void setOperatorLte(String operatorLte) {
    this.operatorLte = operatorLte;
  }


  public GlobalAlertRuleWhereInput operatorNot(String operatorNot) {
    
    this.operatorNot = operatorNot;
    return this;
  }

   /**
   * Get operatorNot
   * @return operatorNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorNot() {
    return operatorNot;
  }


  public void setOperatorNot(String operatorNot) {
    this.operatorNot = operatorNot;
  }


  public GlobalAlertRuleWhereInput operatorNotContains(String operatorNotContains) {
    
    this.operatorNotContains = operatorNotContains;
    return this;
  }

   /**
   * Get operatorNotContains
   * @return operatorNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorNotContains() {
    return operatorNotContains;
  }


  public void setOperatorNotContains(String operatorNotContains) {
    this.operatorNotContains = operatorNotContains;
  }


  public GlobalAlertRuleWhereInput operatorNotEndsWith(String operatorNotEndsWith) {
    
    this.operatorNotEndsWith = operatorNotEndsWith;
    return this;
  }

   /**
   * Get operatorNotEndsWith
   * @return operatorNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorNotEndsWith() {
    return operatorNotEndsWith;
  }


  public void setOperatorNotEndsWith(String operatorNotEndsWith) {
    this.operatorNotEndsWith = operatorNotEndsWith;
  }


  public GlobalAlertRuleWhereInput operatorNotIn(List<String> operatorNotIn) {
    
    this.operatorNotIn = operatorNotIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addOperatorNotInItem(String operatorNotInItem) {
    if (this.operatorNotIn == null) {
      this.operatorNotIn = new ArrayList<String>();
    }
    this.operatorNotIn.add(operatorNotInItem);
    return this;
  }

   /**
   * Get operatorNotIn
   * @return operatorNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getOperatorNotIn() {
    return operatorNotIn;
  }


  public void setOperatorNotIn(List<String> operatorNotIn) {
    this.operatorNotIn = operatorNotIn;
  }


  public GlobalAlertRuleWhereInput operatorNotStartsWith(String operatorNotStartsWith) {
    
    this.operatorNotStartsWith = operatorNotStartsWith;
    return this;
  }

   /**
   * Get operatorNotStartsWith
   * @return operatorNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorNotStartsWith() {
    return operatorNotStartsWith;
  }


  public void setOperatorNotStartsWith(String operatorNotStartsWith) {
    this.operatorNotStartsWith = operatorNotStartsWith;
  }


  public GlobalAlertRuleWhereInput operatorStartsWith(String operatorStartsWith) {
    
    this.operatorStartsWith = operatorStartsWith;
    return this;
  }

   /**
   * Get operatorStartsWith
   * @return operatorStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperatorStartsWith() {
    return operatorStartsWith;
  }


  public void setOperatorStartsWith(String operatorStartsWith) {
    this.operatorStartsWith = operatorStartsWith;
  }


  public GlobalAlertRuleWhereInput solution(String solution) {
    
    this.solution = solution;
    return this;
  }

   /**
   * Get solution
   * @return solution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolution() {
    return solution;
  }


  public void setSolution(String solution) {
    this.solution = solution;
  }


  public GlobalAlertRuleWhereInput solutionContains(String solutionContains) {
    
    this.solutionContains = solutionContains;
    return this;
  }

   /**
   * Get solutionContains
   * @return solutionContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionContains() {
    return solutionContains;
  }


  public void setSolutionContains(String solutionContains) {
    this.solutionContains = solutionContains;
  }


  public GlobalAlertRuleWhereInput solutionEndsWith(String solutionEndsWith) {
    
    this.solutionEndsWith = solutionEndsWith;
    return this;
  }

   /**
   * Get solutionEndsWith
   * @return solutionEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionEndsWith() {
    return solutionEndsWith;
  }


  public void setSolutionEndsWith(String solutionEndsWith) {
    this.solutionEndsWith = solutionEndsWith;
  }


  public GlobalAlertRuleWhereInput solutionGt(String solutionGt) {
    
    this.solutionGt = solutionGt;
    return this;
  }

   /**
   * Get solutionGt
   * @return solutionGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionGt() {
    return solutionGt;
  }


  public void setSolutionGt(String solutionGt) {
    this.solutionGt = solutionGt;
  }


  public GlobalAlertRuleWhereInput solutionGte(String solutionGte) {
    
    this.solutionGte = solutionGte;
    return this;
  }

   /**
   * Get solutionGte
   * @return solutionGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionGte() {
    return solutionGte;
  }


  public void setSolutionGte(String solutionGte) {
    this.solutionGte = solutionGte;
  }


  public GlobalAlertRuleWhereInput solutionIn(List<String> solutionIn) {
    
    this.solutionIn = solutionIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addSolutionInItem(String solutionInItem) {
    if (this.solutionIn == null) {
      this.solutionIn = new ArrayList<String>();
    }
    this.solutionIn.add(solutionInItem);
    return this;
  }

   /**
   * Get solutionIn
   * @return solutionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSolutionIn() {
    return solutionIn;
  }


  public void setSolutionIn(List<String> solutionIn) {
    this.solutionIn = solutionIn;
  }


  public GlobalAlertRuleWhereInput solutionLt(String solutionLt) {
    
    this.solutionLt = solutionLt;
    return this;
  }

   /**
   * Get solutionLt
   * @return solutionLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionLt() {
    return solutionLt;
  }


  public void setSolutionLt(String solutionLt) {
    this.solutionLt = solutionLt;
  }


  public GlobalAlertRuleWhereInput solutionLte(String solutionLte) {
    
    this.solutionLte = solutionLte;
    return this;
  }

   /**
   * Get solutionLte
   * @return solutionLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionLte() {
    return solutionLte;
  }


  public void setSolutionLte(String solutionLte) {
    this.solutionLte = solutionLte;
  }


  public GlobalAlertRuleWhereInput solutionNot(String solutionNot) {
    
    this.solutionNot = solutionNot;
    return this;
  }

   /**
   * Get solutionNot
   * @return solutionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionNot() {
    return solutionNot;
  }


  public void setSolutionNot(String solutionNot) {
    this.solutionNot = solutionNot;
  }


  public GlobalAlertRuleWhereInput solutionNotContains(String solutionNotContains) {
    
    this.solutionNotContains = solutionNotContains;
    return this;
  }

   /**
   * Get solutionNotContains
   * @return solutionNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionNotContains() {
    return solutionNotContains;
  }


  public void setSolutionNotContains(String solutionNotContains) {
    this.solutionNotContains = solutionNotContains;
  }


  public GlobalAlertRuleWhereInput solutionNotEndsWith(String solutionNotEndsWith) {
    
    this.solutionNotEndsWith = solutionNotEndsWith;
    return this;
  }

   /**
   * Get solutionNotEndsWith
   * @return solutionNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionNotEndsWith() {
    return solutionNotEndsWith;
  }


  public void setSolutionNotEndsWith(String solutionNotEndsWith) {
    this.solutionNotEndsWith = solutionNotEndsWith;
  }


  public GlobalAlertRuleWhereInput solutionNotIn(List<String> solutionNotIn) {
    
    this.solutionNotIn = solutionNotIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addSolutionNotInItem(String solutionNotInItem) {
    if (this.solutionNotIn == null) {
      this.solutionNotIn = new ArrayList<String>();
    }
    this.solutionNotIn.add(solutionNotInItem);
    return this;
  }

   /**
   * Get solutionNotIn
   * @return solutionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSolutionNotIn() {
    return solutionNotIn;
  }


  public void setSolutionNotIn(List<String> solutionNotIn) {
    this.solutionNotIn = solutionNotIn;
  }


  public GlobalAlertRuleWhereInput solutionNotStartsWith(String solutionNotStartsWith) {
    
    this.solutionNotStartsWith = solutionNotStartsWith;
    return this;
  }

   /**
   * Get solutionNotStartsWith
   * @return solutionNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionNotStartsWith() {
    return solutionNotStartsWith;
  }


  public void setSolutionNotStartsWith(String solutionNotStartsWith) {
    this.solutionNotStartsWith = solutionNotStartsWith;
  }


  public GlobalAlertRuleWhereInput solutionStartsWith(String solutionStartsWith) {
    
    this.solutionStartsWith = solutionStartsWith;
    return this;
  }

   /**
   * Get solutionStartsWith
   * @return solutionStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolutionStartsWith() {
    return solutionStartsWith;
  }


  public void setSolutionStartsWith(String solutionStartsWith) {
    this.solutionStartsWith = solutionStartsWith;
  }


  public GlobalAlertRuleWhereInput unit(AlertRuleUnit unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AlertRuleUnit getUnit() {
    return unit;
  }


  public void setUnit(AlertRuleUnit unit) {
    this.unit = unit;
  }


  public GlobalAlertRuleWhereInput unitIn(List<AlertRuleUnit> unitIn) {
    
    this.unitIn = unitIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addUnitInItem(AlertRuleUnit unitInItem) {
    if (this.unitIn == null) {
      this.unitIn = new ArrayList<AlertRuleUnit>();
    }
    this.unitIn.add(unitInItem);
    return this;
  }

   /**
   * Get unitIn
   * @return unitIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AlertRuleUnit> getUnitIn() {
    return unitIn;
  }


  public void setUnitIn(List<AlertRuleUnit> unitIn) {
    this.unitIn = unitIn;
  }


  public GlobalAlertRuleWhereInput unitNot(AlertRuleUnit unitNot) {
    
    this.unitNot = unitNot;
    return this;
  }

   /**
   * Get unitNot
   * @return unitNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AlertRuleUnit getUnitNot() {
    return unitNot;
  }


  public void setUnitNot(AlertRuleUnit unitNot) {
    this.unitNot = unitNot;
  }


  public GlobalAlertRuleWhereInput unitNotIn(List<AlertRuleUnit> unitNotIn) {
    
    this.unitNotIn = unitNotIn;
    return this;
  }

  public GlobalAlertRuleWhereInput addUnitNotInItem(AlertRuleUnit unitNotInItem) {
    if (this.unitNotIn == null) {
      this.unitNotIn = new ArrayList<AlertRuleUnit>();
    }
    this.unitNotIn.add(unitNotInItem);
    return this;
  }

   /**
   * Get unitNotIn
   * @return unitNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AlertRuleUnit> getUnitNotIn() {
    return unitNotIn;
  }


  public void setUnitNotIn(List<AlertRuleUnit> unitNotIn) {
    this.unitNotIn = unitNotIn;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalAlertRuleWhereInput globalAlertRuleWhereInput = (GlobalAlertRuleWhereInput) o;
    return Objects.equals(this.AND, globalAlertRuleWhereInput.AND) &&
        Objects.equals(this.NOT, globalAlertRuleWhereInput.NOT) &&
        Objects.equals(this.OR, globalAlertRuleWhereInput.OR) &&
        Objects.equals(this.alertRulesEvery, globalAlertRuleWhereInput.alertRulesEvery) &&
        Objects.equals(this.alertRulesNone, globalAlertRuleWhereInput.alertRulesNone) &&
        Objects.equals(this.alertRulesSome, globalAlertRuleWhereInput.alertRulesSome) &&
        Objects.equals(this._boolean, globalAlertRuleWhereInput._boolean) &&
        Objects.equals(this.booleanNot, globalAlertRuleWhereInput.booleanNot) &&
        Objects.equals(this.cause, globalAlertRuleWhereInput.cause) &&
        Objects.equals(this.causeContains, globalAlertRuleWhereInput.causeContains) &&
        Objects.equals(this.causeEndsWith, globalAlertRuleWhereInput.causeEndsWith) &&
        Objects.equals(this.causeGt, globalAlertRuleWhereInput.causeGt) &&
        Objects.equals(this.causeGte, globalAlertRuleWhereInput.causeGte) &&
        Objects.equals(this.causeIn, globalAlertRuleWhereInput.causeIn) &&
        Objects.equals(this.causeLt, globalAlertRuleWhereInput.causeLt) &&
        Objects.equals(this.causeLte, globalAlertRuleWhereInput.causeLte) &&
        Objects.equals(this.causeNot, globalAlertRuleWhereInput.causeNot) &&
        Objects.equals(this.causeNotContains, globalAlertRuleWhereInput.causeNotContains) &&
        Objects.equals(this.causeNotEndsWith, globalAlertRuleWhereInput.causeNotEndsWith) &&
        Objects.equals(this.causeNotIn, globalAlertRuleWhereInput.causeNotIn) &&
        Objects.equals(this.causeNotStartsWith, globalAlertRuleWhereInput.causeNotStartsWith) &&
        Objects.equals(this.causeStartsWith, globalAlertRuleWhereInput.causeStartsWith) &&
        Objects.equals(this.disabled, globalAlertRuleWhereInput.disabled) &&
        Objects.equals(this.disabledNot, globalAlertRuleWhereInput.disabledNot) &&
        Objects.equals(this.id, globalAlertRuleWhereInput.id) &&
        Objects.equals(this.idContains, globalAlertRuleWhereInput.idContains) &&
        Objects.equals(this.idEndsWith, globalAlertRuleWhereInput.idEndsWith) &&
        Objects.equals(this.idGt, globalAlertRuleWhereInput.idGt) &&
        Objects.equals(this.idGte, globalAlertRuleWhereInput.idGte) &&
        Objects.equals(this.idIn, globalAlertRuleWhereInput.idIn) &&
        Objects.equals(this.idLt, globalAlertRuleWhereInput.idLt) &&
        Objects.equals(this.idLte, globalAlertRuleWhereInput.idLte) &&
        Objects.equals(this.idNot, globalAlertRuleWhereInput.idNot) &&
        Objects.equals(this.idNotContains, globalAlertRuleWhereInput.idNotContains) &&
        Objects.equals(this.idNotEndsWith, globalAlertRuleWhereInput.idNotEndsWith) &&
        Objects.equals(this.idNotIn, globalAlertRuleWhereInput.idNotIn) &&
        Objects.equals(this.idNotStartsWith, globalAlertRuleWhereInput.idNotStartsWith) &&
        Objects.equals(this.idStartsWith, globalAlertRuleWhereInput.idStartsWith) &&
        Objects.equals(this.impact, globalAlertRuleWhereInput.impact) &&
        Objects.equals(this.impactContains, globalAlertRuleWhereInput.impactContains) &&
        Objects.equals(this.impactEndsWith, globalAlertRuleWhereInput.impactEndsWith) &&
        Objects.equals(this.impactGt, globalAlertRuleWhereInput.impactGt) &&
        Objects.equals(this.impactGte, globalAlertRuleWhereInput.impactGte) &&
        Objects.equals(this.impactIn, globalAlertRuleWhereInput.impactIn) &&
        Objects.equals(this.impactLt, globalAlertRuleWhereInput.impactLt) &&
        Objects.equals(this.impactLte, globalAlertRuleWhereInput.impactLte) &&
        Objects.equals(this.impactNot, globalAlertRuleWhereInput.impactNot) &&
        Objects.equals(this.impactNotContains, globalAlertRuleWhereInput.impactNotContains) &&
        Objects.equals(this.impactNotEndsWith, globalAlertRuleWhereInput.impactNotEndsWith) &&
        Objects.equals(this.impactNotIn, globalAlertRuleWhereInput.impactNotIn) &&
        Objects.equals(this.impactNotStartsWith, globalAlertRuleWhereInput.impactNotStartsWith) &&
        Objects.equals(this.impactStartsWith, globalAlertRuleWhereInput.impactStartsWith) &&
        Objects.equals(this.message, globalAlertRuleWhereInput.message) &&
        Objects.equals(this.messageContains, globalAlertRuleWhereInput.messageContains) &&
        Objects.equals(this.messageEndsWith, globalAlertRuleWhereInput.messageEndsWith) &&
        Objects.equals(this.messageGt, globalAlertRuleWhereInput.messageGt) &&
        Objects.equals(this.messageGte, globalAlertRuleWhereInput.messageGte) &&
        Objects.equals(this.messageIn, globalAlertRuleWhereInput.messageIn) &&
        Objects.equals(this.messageLt, globalAlertRuleWhereInput.messageLt) &&
        Objects.equals(this.messageLte, globalAlertRuleWhereInput.messageLte) &&
        Objects.equals(this.messageNot, globalAlertRuleWhereInput.messageNot) &&
        Objects.equals(this.messageNotContains, globalAlertRuleWhereInput.messageNotContains) &&
        Objects.equals(this.messageNotEndsWith, globalAlertRuleWhereInput.messageNotEndsWith) &&
        Objects.equals(this.messageNotIn, globalAlertRuleWhereInput.messageNotIn) &&
        Objects.equals(this.messageNotStartsWith, globalAlertRuleWhereInput.messageNotStartsWith) &&
        Objects.equals(this.messageStartsWith, globalAlertRuleWhereInput.messageStartsWith) &&
        Objects.equals(this.name, globalAlertRuleWhereInput.name) &&
        Objects.equals(this.nameContains, globalAlertRuleWhereInput.nameContains) &&
        Objects.equals(this.nameEndsWith, globalAlertRuleWhereInput.nameEndsWith) &&
        Objects.equals(this.nameGt, globalAlertRuleWhereInput.nameGt) &&
        Objects.equals(this.nameGte, globalAlertRuleWhereInput.nameGte) &&
        Objects.equals(this.nameIn, globalAlertRuleWhereInput.nameIn) &&
        Objects.equals(this.nameLt, globalAlertRuleWhereInput.nameLt) &&
        Objects.equals(this.nameLte, globalAlertRuleWhereInput.nameLte) &&
        Objects.equals(this.nameNot, globalAlertRuleWhereInput.nameNot) &&
        Objects.equals(this.nameNotContains, globalAlertRuleWhereInput.nameNotContains) &&
        Objects.equals(this.nameNotEndsWith, globalAlertRuleWhereInput.nameNotEndsWith) &&
        Objects.equals(this.nameNotIn, globalAlertRuleWhereInput.nameNotIn) &&
        Objects.equals(this.nameNotStartsWith, globalAlertRuleWhereInput.nameNotStartsWith) &&
        Objects.equals(this.nameStartsWith, globalAlertRuleWhereInput.nameStartsWith) &&
        Objects.equals(this._object, globalAlertRuleWhereInput._object) &&
        Objects.equals(this.objectIn, globalAlertRuleWhereInput.objectIn) &&
        Objects.equals(this.objectNot, globalAlertRuleWhereInput.objectNot) &&
        Objects.equals(this.objectNotIn, globalAlertRuleWhereInput.objectNotIn) &&
        Objects.equals(this.operator, globalAlertRuleWhereInput.operator) &&
        Objects.equals(this.operatorContains, globalAlertRuleWhereInput.operatorContains) &&
        Objects.equals(this.operatorEndsWith, globalAlertRuleWhereInput.operatorEndsWith) &&
        Objects.equals(this.operatorGt, globalAlertRuleWhereInput.operatorGt) &&
        Objects.equals(this.operatorGte, globalAlertRuleWhereInput.operatorGte) &&
        Objects.equals(this.operatorIn, globalAlertRuleWhereInput.operatorIn) &&
        Objects.equals(this.operatorLt, globalAlertRuleWhereInput.operatorLt) &&
        Objects.equals(this.operatorLte, globalAlertRuleWhereInput.operatorLte) &&
        Objects.equals(this.operatorNot, globalAlertRuleWhereInput.operatorNot) &&
        Objects.equals(this.operatorNotContains, globalAlertRuleWhereInput.operatorNotContains) &&
        Objects.equals(this.operatorNotEndsWith, globalAlertRuleWhereInput.operatorNotEndsWith) &&
        Objects.equals(this.operatorNotIn, globalAlertRuleWhereInput.operatorNotIn) &&
        Objects.equals(this.operatorNotStartsWith, globalAlertRuleWhereInput.operatorNotStartsWith) &&
        Objects.equals(this.operatorStartsWith, globalAlertRuleWhereInput.operatorStartsWith) &&
        Objects.equals(this.solution, globalAlertRuleWhereInput.solution) &&
        Objects.equals(this.solutionContains, globalAlertRuleWhereInput.solutionContains) &&
        Objects.equals(this.solutionEndsWith, globalAlertRuleWhereInput.solutionEndsWith) &&
        Objects.equals(this.solutionGt, globalAlertRuleWhereInput.solutionGt) &&
        Objects.equals(this.solutionGte, globalAlertRuleWhereInput.solutionGte) &&
        Objects.equals(this.solutionIn, globalAlertRuleWhereInput.solutionIn) &&
        Objects.equals(this.solutionLt, globalAlertRuleWhereInput.solutionLt) &&
        Objects.equals(this.solutionLte, globalAlertRuleWhereInput.solutionLte) &&
        Objects.equals(this.solutionNot, globalAlertRuleWhereInput.solutionNot) &&
        Objects.equals(this.solutionNotContains, globalAlertRuleWhereInput.solutionNotContains) &&
        Objects.equals(this.solutionNotEndsWith, globalAlertRuleWhereInput.solutionNotEndsWith) &&
        Objects.equals(this.solutionNotIn, globalAlertRuleWhereInput.solutionNotIn) &&
        Objects.equals(this.solutionNotStartsWith, globalAlertRuleWhereInput.solutionNotStartsWith) &&
        Objects.equals(this.solutionStartsWith, globalAlertRuleWhereInput.solutionStartsWith) &&
        Objects.equals(this.unit, globalAlertRuleWhereInput.unit) &&
        Objects.equals(this.unitIn, globalAlertRuleWhereInput.unitIn) &&
        Objects.equals(this.unitNot, globalAlertRuleWhereInput.unitNot) &&
        Objects.equals(this.unitNotIn, globalAlertRuleWhereInput.unitNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(AND, NOT, OR, alertRulesEvery, alertRulesNone, alertRulesSome, _boolean, booleanNot, cause, causeContains, causeEndsWith, causeGt, causeGte, causeIn, causeLt, causeLte, causeNot, causeNotContains, causeNotEndsWith, causeNotIn, causeNotStartsWith, causeStartsWith, disabled, disabledNot, id, idContains, idEndsWith, idGt, idGte, idIn, idLt, idLte, idNot, idNotContains, idNotEndsWith, idNotIn, idNotStartsWith, idStartsWith, impact, impactContains, impactEndsWith, impactGt, impactGte, impactIn, impactLt, impactLte, impactNot, impactNotContains, impactNotEndsWith, impactNotIn, impactNotStartsWith, impactStartsWith, message, messageContains, messageEndsWith, messageGt, messageGte, messageIn, messageLt, messageLte, messageNot, messageNotContains, messageNotEndsWith, messageNotIn, messageNotStartsWith, messageStartsWith, name, nameContains, nameEndsWith, nameGt, nameGte, nameIn, nameLt, nameLte, nameNot, nameNotContains, nameNotEndsWith, nameNotIn, nameNotStartsWith, nameStartsWith, _object, objectIn, objectNot, objectNotIn, operator, operatorContains, operatorEndsWith, operatorGt, operatorGte, operatorIn, operatorLt, operatorLte, operatorNot, operatorNotContains, operatorNotEndsWith, operatorNotIn, operatorNotStartsWith, operatorStartsWith, solution, solutionContains, solutionEndsWith, solutionGt, solutionGte, solutionIn, solutionLt, solutionLte, solutionNot, solutionNotContains, solutionNotEndsWith, solutionNotIn, solutionNotStartsWith, solutionStartsWith, unit, unitIn, unitNot, unitNotIn);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalAlertRuleWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    alertRulesEvery: ").append(toIndentedString(alertRulesEvery)).append("\n");
    sb.append("    alertRulesNone: ").append(toIndentedString(alertRulesNone)).append("\n");
    sb.append("    alertRulesSome: ").append(toIndentedString(alertRulesSome)).append("\n");
    sb.append("    _boolean: ").append(toIndentedString(_boolean)).append("\n");
    sb.append("    booleanNot: ").append(toIndentedString(booleanNot)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    causeContains: ").append(toIndentedString(causeContains)).append("\n");
    sb.append("    causeEndsWith: ").append(toIndentedString(causeEndsWith)).append("\n");
    sb.append("    causeGt: ").append(toIndentedString(causeGt)).append("\n");
    sb.append("    causeGte: ").append(toIndentedString(causeGte)).append("\n");
    sb.append("    causeIn: ").append(toIndentedString(causeIn)).append("\n");
    sb.append("    causeLt: ").append(toIndentedString(causeLt)).append("\n");
    sb.append("    causeLte: ").append(toIndentedString(causeLte)).append("\n");
    sb.append("    causeNot: ").append(toIndentedString(causeNot)).append("\n");
    sb.append("    causeNotContains: ").append(toIndentedString(causeNotContains)).append("\n");
    sb.append("    causeNotEndsWith: ").append(toIndentedString(causeNotEndsWith)).append("\n");
    sb.append("    causeNotIn: ").append(toIndentedString(causeNotIn)).append("\n");
    sb.append("    causeNotStartsWith: ").append(toIndentedString(causeNotStartsWith)).append("\n");
    sb.append("    causeStartsWith: ").append(toIndentedString(causeStartsWith)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    disabledNot: ").append(toIndentedString(disabledNot)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    impactContains: ").append(toIndentedString(impactContains)).append("\n");
    sb.append("    impactEndsWith: ").append(toIndentedString(impactEndsWith)).append("\n");
    sb.append("    impactGt: ").append(toIndentedString(impactGt)).append("\n");
    sb.append("    impactGte: ").append(toIndentedString(impactGte)).append("\n");
    sb.append("    impactIn: ").append(toIndentedString(impactIn)).append("\n");
    sb.append("    impactLt: ").append(toIndentedString(impactLt)).append("\n");
    sb.append("    impactLte: ").append(toIndentedString(impactLte)).append("\n");
    sb.append("    impactNot: ").append(toIndentedString(impactNot)).append("\n");
    sb.append("    impactNotContains: ").append(toIndentedString(impactNotContains)).append("\n");
    sb.append("    impactNotEndsWith: ").append(toIndentedString(impactNotEndsWith)).append("\n");
    sb.append("    impactNotIn: ").append(toIndentedString(impactNotIn)).append("\n");
    sb.append("    impactNotStartsWith: ").append(toIndentedString(impactNotStartsWith)).append("\n");
    sb.append("    impactStartsWith: ").append(toIndentedString(impactStartsWith)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    messageContains: ").append(toIndentedString(messageContains)).append("\n");
    sb.append("    messageEndsWith: ").append(toIndentedString(messageEndsWith)).append("\n");
    sb.append("    messageGt: ").append(toIndentedString(messageGt)).append("\n");
    sb.append("    messageGte: ").append(toIndentedString(messageGte)).append("\n");
    sb.append("    messageIn: ").append(toIndentedString(messageIn)).append("\n");
    sb.append("    messageLt: ").append(toIndentedString(messageLt)).append("\n");
    sb.append("    messageLte: ").append(toIndentedString(messageLte)).append("\n");
    sb.append("    messageNot: ").append(toIndentedString(messageNot)).append("\n");
    sb.append("    messageNotContains: ").append(toIndentedString(messageNotContains)).append("\n");
    sb.append("    messageNotEndsWith: ").append(toIndentedString(messageNotEndsWith)).append("\n");
    sb.append("    messageNotIn: ").append(toIndentedString(messageNotIn)).append("\n");
    sb.append("    messageNotStartsWith: ").append(toIndentedString(messageNotStartsWith)).append("\n");
    sb.append("    messageStartsWith: ").append(toIndentedString(messageStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    objectIn: ").append(toIndentedString(objectIn)).append("\n");
    sb.append("    objectNot: ").append(toIndentedString(objectNot)).append("\n");
    sb.append("    objectNotIn: ").append(toIndentedString(objectNotIn)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    operatorContains: ").append(toIndentedString(operatorContains)).append("\n");
    sb.append("    operatorEndsWith: ").append(toIndentedString(operatorEndsWith)).append("\n");
    sb.append("    operatorGt: ").append(toIndentedString(operatorGt)).append("\n");
    sb.append("    operatorGte: ").append(toIndentedString(operatorGte)).append("\n");
    sb.append("    operatorIn: ").append(toIndentedString(operatorIn)).append("\n");
    sb.append("    operatorLt: ").append(toIndentedString(operatorLt)).append("\n");
    sb.append("    operatorLte: ").append(toIndentedString(operatorLte)).append("\n");
    sb.append("    operatorNot: ").append(toIndentedString(operatorNot)).append("\n");
    sb.append("    operatorNotContains: ").append(toIndentedString(operatorNotContains)).append("\n");
    sb.append("    operatorNotEndsWith: ").append(toIndentedString(operatorNotEndsWith)).append("\n");
    sb.append("    operatorNotIn: ").append(toIndentedString(operatorNotIn)).append("\n");
    sb.append("    operatorNotStartsWith: ").append(toIndentedString(operatorNotStartsWith)).append("\n");
    sb.append("    operatorStartsWith: ").append(toIndentedString(operatorStartsWith)).append("\n");
    sb.append("    solution: ").append(toIndentedString(solution)).append("\n");
    sb.append("    solutionContains: ").append(toIndentedString(solutionContains)).append("\n");
    sb.append("    solutionEndsWith: ").append(toIndentedString(solutionEndsWith)).append("\n");
    sb.append("    solutionGt: ").append(toIndentedString(solutionGt)).append("\n");
    sb.append("    solutionGte: ").append(toIndentedString(solutionGte)).append("\n");
    sb.append("    solutionIn: ").append(toIndentedString(solutionIn)).append("\n");
    sb.append("    solutionLt: ").append(toIndentedString(solutionLt)).append("\n");
    sb.append("    solutionLte: ").append(toIndentedString(solutionLte)).append("\n");
    sb.append("    solutionNot: ").append(toIndentedString(solutionNot)).append("\n");
    sb.append("    solutionNotContains: ").append(toIndentedString(solutionNotContains)).append("\n");
    sb.append("    solutionNotEndsWith: ").append(toIndentedString(solutionNotEndsWith)).append("\n");
    sb.append("    solutionNotIn: ").append(toIndentedString(solutionNotIn)).append("\n");
    sb.append("    solutionNotStartsWith: ").append(toIndentedString(solutionNotStartsWith)).append("\n");
    sb.append("    solutionStartsWith: ").append(toIndentedString(solutionStartsWith)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    unitIn: ").append(toIndentedString(unitIn)).append("\n");
    sb.append("    unitNot: ").append(toIndentedString(unitNot)).append("\n");
    sb.append("    unitNotIn: ").append(toIndentedString(unitNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

