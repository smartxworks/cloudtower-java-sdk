/*
 * CloudTower APIs
 * cloudtower operation API and SDK
 *
 * * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartx.tower.model.GraphType;
import com.smartx.tower.model.MetricType;
import com.smartx.tower.model.NetworkType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * GraphCreationParams
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GraphCreationParams {
  public static final String SERIALIZED_NAME_INSTANCE_IDS = "instance_ids";
  @SerializedName(SERIALIZED_NAME_INSTANCE_IDS)
  private List<String> instanceIds = null;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private NetworkType network;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private String service;

  public static final String SERIALIZED_NAME_METRIC_TYPE = "metric_type";
  @SerializedName(SERIALIZED_NAME_METRIC_TYPE)
  private MetricType metricType;

  public static final String SERIALIZED_NAME_METRIC_COUNT = "metric_count";
  @SerializedName(SERIALIZED_NAME_METRIC_COUNT)
  private Integer metricCount;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private GraphType type;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resource_type";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public static final String SERIALIZED_NAME_VIEW_ID = "view_id";
  @SerializedName(SERIALIZED_NAME_VIEW_ID)
  private String viewId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_CLUSTER_ID = "cluster_id";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ID)
  private String clusterId;

  public static final String SERIALIZED_NAME_CONNECT_ID = "connect_id";
  @SerializedName(SERIALIZED_NAME_CONNECT_ID)
  private List<String> connectId = new ArrayList<String>();

  public static final String SERIALIZED_NAME_METRIC_NAME = "metric_name";
  @SerializedName(SERIALIZED_NAME_METRIC_NAME)
  private String metricName;

  public GraphCreationParams() { 
  }

  public GraphCreationParams instanceIds(List<String> instanceIds) {
    
    this.instanceIds = instanceIds;
    return this;
  }

  public GraphCreationParams addInstanceIdsItem(String instanceIdsItem) {
    if (this.instanceIds == null) {
      this.instanceIds = new ArrayList<String>();
    }
    this.instanceIds.add(instanceIdsItem);
    return this;
  }

   /**
   * Get instanceIds
   * @return instanceIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getInstanceIds() {
    return instanceIds;
  }


  public void setInstanceIds(List<String> instanceIds) {
    this.instanceIds = instanceIds;
  }


  public GraphCreationParams network(NetworkType network) {
    
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NetworkType getNetwork() {
    return network;
  }


  public void setNetwork(NetworkType network) {
    this.network = network;
  }


  public GraphCreationParams service(String service) {
    
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getService() {
    return service;
  }


  public void setService(String service) {
    this.service = service;
  }


  public GraphCreationParams metricType(MetricType metricType) {
    
    this.metricType = metricType;
    return this;
  }

   /**
   * Get metricType
   * @return metricType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetricType getMetricType() {
    return metricType;
  }


  public void setMetricType(MetricType metricType) {
    this.metricType = metricType;
  }


  public GraphCreationParams metricCount(Integer metricCount) {
    
    this.metricCount = metricCount;
    return this;
  }

   /**
   * Get metricCount
   * @return metricCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMetricCount() {
    return metricCount;
  }


  public void setMetricCount(Integer metricCount) {
    this.metricCount = metricCount;
  }


  public GraphCreationParams type(GraphType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public GraphType getType() {
    return type;
  }


  public void setType(GraphType type) {
    this.type = type;
  }


  public GraphCreationParams resourceType(String resourceType) {
    
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getResourceType() {
    return resourceType;
  }


  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public GraphCreationParams viewId(String viewId) {
    
    this.viewId = viewId;
    return this;
  }

   /**
   * Get viewId
   * @return viewId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getViewId() {
    return viewId;
  }


  public void setViewId(String viewId) {
    this.viewId = viewId;
  }


  public GraphCreationParams title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public GraphCreationParams clusterId(String clusterId) {
    
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Get clusterId
   * @return clusterId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getClusterId() {
    return clusterId;
  }


  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }


  public GraphCreationParams connectId(List<String> connectId) {
    
    this.connectId = connectId;
    return this;
  }

  public GraphCreationParams addConnectIdItem(String connectIdItem) {
    this.connectId.add(connectIdItem);
    return this;
  }

   /**
   * Get connectId
   * @return connectId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getConnectId() {
    return connectId;
  }


  public void setConnectId(List<String> connectId) {
    this.connectId = connectId;
  }


  public GraphCreationParams metricName(String metricName) {
    
    this.metricName = metricName;
    return this;
  }

   /**
   * Get metricName
   * @return metricName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getMetricName() {
    return metricName;
  }


  public void setMetricName(String metricName) {
    this.metricName = metricName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GraphCreationParams graphCreationParams = (GraphCreationParams) o;
    return Objects.equals(this.instanceIds, graphCreationParams.instanceIds) &&
        Objects.equals(this.network, graphCreationParams.network) &&
        Objects.equals(this.service, graphCreationParams.service) &&
        Objects.equals(this.metricType, graphCreationParams.metricType) &&
        Objects.equals(this.metricCount, graphCreationParams.metricCount) &&
        Objects.equals(this.type, graphCreationParams.type) &&
        Objects.equals(this.resourceType, graphCreationParams.resourceType) &&
        Objects.equals(this.viewId, graphCreationParams.viewId) &&
        Objects.equals(this.title, graphCreationParams.title) &&
        Objects.equals(this.clusterId, graphCreationParams.clusterId) &&
        Objects.equals(this.connectId, graphCreationParams.connectId) &&
        Objects.equals(this.metricName, graphCreationParams.metricName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceIds, network, service, metricType, metricCount, type, resourceType, viewId, title, clusterId, connectId, metricName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GraphCreationParams {\n");
    sb.append("    instanceIds: ").append(toIndentedString(instanceIds)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    metricType: ").append(toIndentedString(metricType)).append("\n");
    sb.append("    metricCount: ").append(toIndentedString(metricCount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    viewId: ").append(toIndentedString(viewId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    connectId: ").append(toIndentedString(connectId)).append("\n");
    sb.append("    metricName: ").append(toIndentedString(metricName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

