/*
 * CloudTower APIs
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartx.tower.model.BackupServiceStatus;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.NestedBackupPackage;
import com.smartx.tower.model.NestedBackupPlan;
import com.smartx.tower.model.NestedBackupServiceNetworkStatus;
import com.smartx.tower.model.NestedBackupStoreRepository;
import com.smartx.tower.model.NestedCluster;
import com.smartx.tower.model.NestedVm;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * BackupService
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BackupService {
  public static final String SERIALIZED_NAME_BACKUP_CLUSTERS = "backup_clusters";
  @SerializedName(SERIALIZED_NAME_BACKUP_CLUSTERS)
  private List<NestedCluster> backupClusters = null;

  public static final String SERIALIZED_NAME_BACKUP_PACKAGE = "backup_package";
  @SerializedName(SERIALIZED_NAME_BACKUP_PACKAGE)
  private NestedBackupPackage backupPackage;

  public static final String SERIALIZED_NAME_BACKUP_PLANS = "backup_plans";
  @SerializedName(SERIALIZED_NAME_BACKUP_PLANS)
  private List<NestedBackupPlan> backupPlans = null;

  public static final String SERIALIZED_NAME_BACKUP_STORE_REPOSITORIES = "backup_store_repositories";
  @SerializedName(SERIALIZED_NAME_BACKUP_STORE_REPOSITORIES)
  private List<NestedBackupStoreRepository> backupStoreRepositories = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  @SerializedName(SERIALIZED_NAME_ENTITY_ASYNC_STATUS)
  private EntityAsyncStatus entityAsyncStatus;

  public static final String SERIALIZED_NAME_GATEWAY = "gateway";
  @SerializedName(SERIALIZED_NAME_GATEWAY)
  private String gateway;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IOPS_LIMIT = "iops_limit";
  @SerializedName(SERIALIZED_NAME_IOPS_LIMIT)
  private Integer iopsLimit;

  public static final String SERIALIZED_NAME_IP = "ip";
  @SerializedName(SERIALIZED_NAME_IP)
  private String ip;

  public static final String SERIALIZED_NAME_KUBE_CONFIG = "kube_config";
  @SerializedName(SERIALIZED_NAME_KUBE_CONFIG)
  private String kubeConfig;

  public static final String SERIALIZED_NAME_MAX_JOB_RETRY_TIMES = "max_job_retry_times";
  @SerializedName(SERIALIZED_NAME_MAX_JOB_RETRY_TIMES)
  private Integer maxJobRetryTimes;

  public static final String SERIALIZED_NAME_MAX_PARALLEL_BACKUP_JOBS = "max_parallel_backup_jobs";
  @SerializedName(SERIALIZED_NAME_MAX_PARALLEL_BACKUP_JOBS)
  private Integer maxParallelBackupJobs;

  public static final String SERIALIZED_NAME_MAX_PARALLEL_RESTORE_JOBS = "max_parallel_restore_jobs";
  @SerializedName(SERIALIZED_NAME_MAX_PARALLEL_RESTORE_JOBS)
  private Integer maxParallelRestoreJobs;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORK_STATUS = "network_status";
  @SerializedName(SERIALIZED_NAME_NETWORK_STATUS)
  private List<NestedBackupServiceNetworkStatus> networkStatus = null;

  public static final String SERIALIZED_NAME_RETRY_INTERVAL = "retry_interval";
  @SerializedName(SERIALIZED_NAME_RETRY_INTERVAL)
  private Integer retryInterval;

  public static final String SERIALIZED_NAME_RUNNING_VM = "running_vm";
  @SerializedName(SERIALIZED_NAME_RUNNING_VM)
  private NestedVm runningVm;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private BackupServiceStatus status;

  public static final String SERIALIZED_NAME_SUBNET_MASK = "subnet_mask";
  @SerializedName(SERIALIZED_NAME_SUBNET_MASK)
  private String subnetMask;

  public BackupService() { 
  }

  public BackupService backupClusters(List<NestedCluster> backupClusters) {
    
    this.backupClusters = backupClusters;
    return this;
  }

  public BackupService addBackupClustersItem(NestedCluster backupClustersItem) {
    if (this.backupClusters == null) {
      this.backupClusters = new ArrayList<NestedCluster>();
    }
    this.backupClusters.add(backupClustersItem);
    return this;
  }

   /**
   * Get backupClusters
   * @return backupClusters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NestedCluster> getBackupClusters() {
    return backupClusters;
  }


  public void setBackupClusters(List<NestedCluster> backupClusters) {
    this.backupClusters = backupClusters;
  }


  public BackupService backupPackage(NestedBackupPackage backupPackage) {
    
    this.backupPackage = backupPackage;
    return this;
  }

   /**
   * Get backupPackage
   * @return backupPackage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public NestedBackupPackage getBackupPackage() {
    return backupPackage;
  }


  public void setBackupPackage(NestedBackupPackage backupPackage) {
    this.backupPackage = backupPackage;
  }


  public BackupService backupPlans(List<NestedBackupPlan> backupPlans) {
    
    this.backupPlans = backupPlans;
    return this;
  }

  public BackupService addBackupPlansItem(NestedBackupPlan backupPlansItem) {
    if (this.backupPlans == null) {
      this.backupPlans = new ArrayList<NestedBackupPlan>();
    }
    this.backupPlans.add(backupPlansItem);
    return this;
  }

   /**
   * Get backupPlans
   * @return backupPlans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NestedBackupPlan> getBackupPlans() {
    return backupPlans;
  }


  public void setBackupPlans(List<NestedBackupPlan> backupPlans) {
    this.backupPlans = backupPlans;
  }


  public BackupService backupStoreRepositories(List<NestedBackupStoreRepository> backupStoreRepositories) {
    
    this.backupStoreRepositories = backupStoreRepositories;
    return this;
  }

  public BackupService addBackupStoreRepositoriesItem(NestedBackupStoreRepository backupStoreRepositoriesItem) {
    if (this.backupStoreRepositories == null) {
      this.backupStoreRepositories = new ArrayList<NestedBackupStoreRepository>();
    }
    this.backupStoreRepositories.add(backupStoreRepositoriesItem);
    return this;
  }

   /**
   * Get backupStoreRepositories
   * @return backupStoreRepositories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NestedBackupStoreRepository> getBackupStoreRepositories() {
    return backupStoreRepositories;
  }


  public void setBackupStoreRepositories(List<NestedBackupStoreRepository> backupStoreRepositories) {
    this.backupStoreRepositories = backupStoreRepositories;
  }


  public BackupService description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public BackupService entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    
    this.entityAsyncStatus = entityAsyncStatus;
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EntityAsyncStatus getEntityAsyncStatus() {
    return entityAsyncStatus;
  }


  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }


  public BackupService gateway(String gateway) {
    
    this.gateway = gateway;
    return this;
  }

   /**
   * Get gateway
   * @return gateway
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGateway() {
    return gateway;
  }


  public void setGateway(String gateway) {
    this.gateway = gateway;
  }


  public BackupService id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public BackupService iopsLimit(Integer iopsLimit) {
    
    this.iopsLimit = iopsLimit;
    return this;
  }

   /**
   * Get iopsLimit
   * @return iopsLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getIopsLimit() {
    return iopsLimit;
  }


  public void setIopsLimit(Integer iopsLimit) {
    this.iopsLimit = iopsLimit;
  }


  public BackupService ip(String ip) {
    
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIp() {
    return ip;
  }


  public void setIp(String ip) {
    this.ip = ip;
  }


  public BackupService kubeConfig(String kubeConfig) {
    
    this.kubeConfig = kubeConfig;
    return this;
  }

   /**
   * Get kubeConfig
   * @return kubeConfig
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getKubeConfig() {
    return kubeConfig;
  }


  public void setKubeConfig(String kubeConfig) {
    this.kubeConfig = kubeConfig;
  }


  public BackupService maxJobRetryTimes(Integer maxJobRetryTimes) {
    
    this.maxJobRetryTimes = maxJobRetryTimes;
    return this;
  }

   /**
   * Get maxJobRetryTimes
   * @return maxJobRetryTimes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxJobRetryTimes() {
    return maxJobRetryTimes;
  }


  public void setMaxJobRetryTimes(Integer maxJobRetryTimes) {
    this.maxJobRetryTimes = maxJobRetryTimes;
  }


  public BackupService maxParallelBackupJobs(Integer maxParallelBackupJobs) {
    
    this.maxParallelBackupJobs = maxParallelBackupJobs;
    return this;
  }

   /**
   * Get maxParallelBackupJobs
   * @return maxParallelBackupJobs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxParallelBackupJobs() {
    return maxParallelBackupJobs;
  }


  public void setMaxParallelBackupJobs(Integer maxParallelBackupJobs) {
    this.maxParallelBackupJobs = maxParallelBackupJobs;
  }


  public BackupService maxParallelRestoreJobs(Integer maxParallelRestoreJobs) {
    
    this.maxParallelRestoreJobs = maxParallelRestoreJobs;
    return this;
  }

   /**
   * Get maxParallelRestoreJobs
   * @return maxParallelRestoreJobs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxParallelRestoreJobs() {
    return maxParallelRestoreJobs;
  }


  public void setMaxParallelRestoreJobs(Integer maxParallelRestoreJobs) {
    this.maxParallelRestoreJobs = maxParallelRestoreJobs;
  }


  public BackupService name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BackupService networkStatus(List<NestedBackupServiceNetworkStatus> networkStatus) {
    
    this.networkStatus = networkStatus;
    return this;
  }

  public BackupService addNetworkStatusItem(NestedBackupServiceNetworkStatus networkStatusItem) {
    if (this.networkStatus == null) {
      this.networkStatus = new ArrayList<NestedBackupServiceNetworkStatus>();
    }
    this.networkStatus.add(networkStatusItem);
    return this;
  }

   /**
   * Get networkStatus
   * @return networkStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NestedBackupServiceNetworkStatus> getNetworkStatus() {
    return networkStatus;
  }


  public void setNetworkStatus(List<NestedBackupServiceNetworkStatus> networkStatus) {
    this.networkStatus = networkStatus;
  }


  public BackupService retryInterval(Integer retryInterval) {
    
    this.retryInterval = retryInterval;
    return this;
  }

   /**
   * Get retryInterval
   * @return retryInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRetryInterval() {
    return retryInterval;
  }


  public void setRetryInterval(Integer retryInterval) {
    this.retryInterval = retryInterval;
  }


  public BackupService runningVm(NestedVm runningVm) {
    
    this.runningVm = runningVm;
    return this;
  }

   /**
   * Get runningVm
   * @return runningVm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NestedVm getRunningVm() {
    return runningVm;
  }


  public void setRunningVm(NestedVm runningVm) {
    this.runningVm = runningVm;
  }


  public BackupService status(BackupServiceStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupServiceStatus getStatus() {
    return status;
  }


  public void setStatus(BackupServiceStatus status) {
    this.status = status;
  }


  public BackupService subnetMask(String subnetMask) {
    
    this.subnetMask = subnetMask;
    return this;
  }

   /**
   * Get subnetMask
   * @return subnetMask
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubnetMask() {
    return subnetMask;
  }


  public void setSubnetMask(String subnetMask) {
    this.subnetMask = subnetMask;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupService backupService = (BackupService) o;
    return Objects.equals(this.backupClusters, backupService.backupClusters) &&
        Objects.equals(this.backupPackage, backupService.backupPackage) &&
        Objects.equals(this.backupPlans, backupService.backupPlans) &&
        Objects.equals(this.backupStoreRepositories, backupService.backupStoreRepositories) &&
        Objects.equals(this.description, backupService.description) &&
        Objects.equals(this.entityAsyncStatus, backupService.entityAsyncStatus) &&
        Objects.equals(this.gateway, backupService.gateway) &&
        Objects.equals(this.id, backupService.id) &&
        Objects.equals(this.iopsLimit, backupService.iopsLimit) &&
        Objects.equals(this.ip, backupService.ip) &&
        Objects.equals(this.kubeConfig, backupService.kubeConfig) &&
        Objects.equals(this.maxJobRetryTimes, backupService.maxJobRetryTimes) &&
        Objects.equals(this.maxParallelBackupJobs, backupService.maxParallelBackupJobs) &&
        Objects.equals(this.maxParallelRestoreJobs, backupService.maxParallelRestoreJobs) &&
        Objects.equals(this.name, backupService.name) &&
        Objects.equals(this.networkStatus, backupService.networkStatus) &&
        Objects.equals(this.retryInterval, backupService.retryInterval) &&
        Objects.equals(this.runningVm, backupService.runningVm) &&
        Objects.equals(this.status, backupService.status) &&
        Objects.equals(this.subnetMask, backupService.subnetMask);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupClusters, backupPackage, backupPlans, backupStoreRepositories, description, entityAsyncStatus, gateway, id, iopsLimit, ip, kubeConfig, maxJobRetryTimes, maxParallelBackupJobs, maxParallelRestoreJobs, name, networkStatus, retryInterval, runningVm, status, subnetMask);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupService {\n");
    sb.append("    backupClusters: ").append(toIndentedString(backupClusters)).append("\n");
    sb.append("    backupPackage: ").append(toIndentedString(backupPackage)).append("\n");
    sb.append("    backupPlans: ").append(toIndentedString(backupPlans)).append("\n");
    sb.append("    backupStoreRepositories: ").append(toIndentedString(backupStoreRepositories)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    iopsLimit: ").append(toIndentedString(iopsLimit)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    kubeConfig: ").append(toIndentedString(kubeConfig)).append("\n");
    sb.append("    maxJobRetryTimes: ").append(toIndentedString(maxJobRetryTimes)).append("\n");
    sb.append("    maxParallelBackupJobs: ").append(toIndentedString(maxParallelBackupJobs)).append("\n");
    sb.append("    maxParallelRestoreJobs: ").append(toIndentedString(maxParallelRestoreJobs)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    networkStatus: ").append(toIndentedString(networkStatus)).append("\n");
    sb.append("    retryInterval: ").append(toIndentedString(retryInterval)).append("\n");
    sb.append("    runningVm: ").append(toIndentedString(runningVm)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subnetMask: ").append(toIndentedString(subnetMask)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

