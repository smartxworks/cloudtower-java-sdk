/*
 * CloudTower APIs
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartx.tower.model.EntityAsyncStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * MigrateTransmitterWhereInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MigrateTransmitterWhereInput {
  public static final String SERIALIZED_NAME_A_N_D = "AND";
  @SerializedName(SERIALIZED_NAME_A_N_D)
  private List<MigrateTransmitterWhereInput> AND = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CREATED_AT_GT = "createdAt_gt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_GT)
  private String createdAtGt;

  public static final String SERIALIZED_NAME_CREATED_AT_GTE = "createdAt_gte";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_GTE)
  private String createdAtGte;

  public static final String SERIALIZED_NAME_CREATED_AT_IN = "createdAt_in";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_IN)
  private List<String> createdAtIn = null;

  public static final String SERIALIZED_NAME_CREATED_AT_LT = "createdAt_lt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_LT)
  private String createdAtLt;

  public static final String SERIALIZED_NAME_CREATED_AT_LTE = "createdAt_lte";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_LTE)
  private String createdAtLte;

  public static final String SERIALIZED_NAME_CREATED_AT_NOT = "createdAt_not";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_NOT)
  private String createdAtNot;

  public static final String SERIALIZED_NAME_CREATED_AT_NOT_IN = "createdAt_not_in";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_NOT_IN)
  private List<String> createdAtNotIn = null;

  public static final String SERIALIZED_NAME_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  @SerializedName(SERIALIZED_NAME_ENTITY_ASYNC_STATUS)
  private EntityAsyncStatus entityAsyncStatus;

  public static final String SERIALIZED_NAME_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  @SerializedName(SERIALIZED_NAME_ENTITY_ASYNC_STATUS_IN)
  private List<EntityAsyncStatus> entityAsyncStatusIn = null;

  public static final String SERIALIZED_NAME_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  @SerializedName(SERIALIZED_NAME_ENTITY_ASYNC_STATUS_NOT)
  private EntityAsyncStatus entityAsyncStatusNot;

  public static final String SERIALIZED_NAME_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  @SerializedName(SERIALIZED_NAME_ENTITY_ASYNC_STATUS_NOT_IN)
  private List<EntityAsyncStatus> entityAsyncStatusNotIn = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ID_CONTAINS = "id_contains";
  @SerializedName(SERIALIZED_NAME_ID_CONTAINS)
  private String idContains;

  public static final String SERIALIZED_NAME_ID_ENDS_WITH = "id_ends_with";
  @SerializedName(SERIALIZED_NAME_ID_ENDS_WITH)
  private String idEndsWith;

  public static final String SERIALIZED_NAME_ID_GT = "id_gt";
  @SerializedName(SERIALIZED_NAME_ID_GT)
  private String idGt;

  public static final String SERIALIZED_NAME_ID_GTE = "id_gte";
  @SerializedName(SERIALIZED_NAME_ID_GTE)
  private String idGte;

  public static final String SERIALIZED_NAME_ID_IN = "id_in";
  @SerializedName(SERIALIZED_NAME_ID_IN)
  private List<String> idIn = null;

  public static final String SERIALIZED_NAME_ID_LT = "id_lt";
  @SerializedName(SERIALIZED_NAME_ID_LT)
  private String idLt;

  public static final String SERIALIZED_NAME_ID_LTE = "id_lte";
  @SerializedName(SERIALIZED_NAME_ID_LTE)
  private String idLte;

  public static final String SERIALIZED_NAME_ID_NOT = "id_not";
  @SerializedName(SERIALIZED_NAME_ID_NOT)
  private String idNot;

  public static final String SERIALIZED_NAME_ID_NOT_CONTAINS = "id_not_contains";
  @SerializedName(SERIALIZED_NAME_ID_NOT_CONTAINS)
  private String idNotContains;

  public static final String SERIALIZED_NAME_ID_NOT_ENDS_WITH = "id_not_ends_with";
  @SerializedName(SERIALIZED_NAME_ID_NOT_ENDS_WITH)
  private String idNotEndsWith;

  public static final String SERIALIZED_NAME_ID_NOT_IN = "id_not_in";
  @SerializedName(SERIALIZED_NAME_ID_NOT_IN)
  private List<String> idNotIn = null;

  public static final String SERIALIZED_NAME_ID_NOT_STARTS_WITH = "id_not_starts_with";
  @SerializedName(SERIALIZED_NAME_ID_NOT_STARTS_WITH)
  private String idNotStartsWith;

  public static final String SERIALIZED_NAME_ID_STARTS_WITH = "id_starts_with";
  @SerializedName(SERIALIZED_NAME_ID_STARTS_WITH)
  private String idStartsWith;

  public static final String SERIALIZED_NAME_IP = "ip";
  @SerializedName(SERIALIZED_NAME_IP)
  private String ip;

  public static final String SERIALIZED_NAME_IP_CONTAINS = "ip_contains";
  @SerializedName(SERIALIZED_NAME_IP_CONTAINS)
  private String ipContains;

  public static final String SERIALIZED_NAME_IP_ENDS_WITH = "ip_ends_with";
  @SerializedName(SERIALIZED_NAME_IP_ENDS_WITH)
  private String ipEndsWith;

  public static final String SERIALIZED_NAME_IP_GT = "ip_gt";
  @SerializedName(SERIALIZED_NAME_IP_GT)
  private String ipGt;

  public static final String SERIALIZED_NAME_IP_GTE = "ip_gte";
  @SerializedName(SERIALIZED_NAME_IP_GTE)
  private String ipGte;

  public static final String SERIALIZED_NAME_IP_IN = "ip_in";
  @SerializedName(SERIALIZED_NAME_IP_IN)
  private List<String> ipIn = null;

  public static final String SERIALIZED_NAME_IP_LT = "ip_lt";
  @SerializedName(SERIALIZED_NAME_IP_LT)
  private String ipLt;

  public static final String SERIALIZED_NAME_IP_LTE = "ip_lte";
  @SerializedName(SERIALIZED_NAME_IP_LTE)
  private String ipLte;

  public static final String SERIALIZED_NAME_IP_NOT = "ip_not";
  @SerializedName(SERIALIZED_NAME_IP_NOT)
  private String ipNot;

  public static final String SERIALIZED_NAME_IP_NOT_CONTAINS = "ip_not_contains";
  @SerializedName(SERIALIZED_NAME_IP_NOT_CONTAINS)
  private String ipNotContains;

  public static final String SERIALIZED_NAME_IP_NOT_ENDS_WITH = "ip_not_ends_with";
  @SerializedName(SERIALIZED_NAME_IP_NOT_ENDS_WITH)
  private String ipNotEndsWith;

  public static final String SERIALIZED_NAME_IP_NOT_IN = "ip_not_in";
  @SerializedName(SERIALIZED_NAME_IP_NOT_IN)
  private List<String> ipNotIn = null;

  public static final String SERIALIZED_NAME_IP_NOT_STARTS_WITH = "ip_not_starts_with";
  @SerializedName(SERIALIZED_NAME_IP_NOT_STARTS_WITH)
  private String ipNotStartsWith;

  public static final String SERIALIZED_NAME_IP_STARTS_WITH = "ip_starts_with";
  @SerializedName(SERIALIZED_NAME_IP_STARTS_WITH)
  private String ipStartsWith;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAME_CONTAINS = "name_contains";
  @SerializedName(SERIALIZED_NAME_NAME_CONTAINS)
  private String nameContains;

  public static final String SERIALIZED_NAME_NAME_ENDS_WITH = "name_ends_with";
  @SerializedName(SERIALIZED_NAME_NAME_ENDS_WITH)
  private String nameEndsWith;

  public static final String SERIALIZED_NAME_NAME_GT = "name_gt";
  @SerializedName(SERIALIZED_NAME_NAME_GT)
  private String nameGt;

  public static final String SERIALIZED_NAME_NAME_GTE = "name_gte";
  @SerializedName(SERIALIZED_NAME_NAME_GTE)
  private String nameGte;

  public static final String SERIALIZED_NAME_NAME_IN = "name_in";
  @SerializedName(SERIALIZED_NAME_NAME_IN)
  private List<String> nameIn = null;

  public static final String SERIALIZED_NAME_NAME_LT = "name_lt";
  @SerializedName(SERIALIZED_NAME_NAME_LT)
  private String nameLt;

  public static final String SERIALIZED_NAME_NAME_LTE = "name_lte";
  @SerializedName(SERIALIZED_NAME_NAME_LTE)
  private String nameLte;

  public static final String SERIALIZED_NAME_NAME_NOT = "name_not";
  @SerializedName(SERIALIZED_NAME_NAME_NOT)
  private String nameNot;

  public static final String SERIALIZED_NAME_NAME_NOT_CONTAINS = "name_not_contains";
  @SerializedName(SERIALIZED_NAME_NAME_NOT_CONTAINS)
  private String nameNotContains;

  public static final String SERIALIZED_NAME_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  @SerializedName(SERIALIZED_NAME_NAME_NOT_ENDS_WITH)
  private String nameNotEndsWith;

  public static final String SERIALIZED_NAME_NAME_NOT_IN = "name_not_in";
  @SerializedName(SERIALIZED_NAME_NAME_NOT_IN)
  private List<String> nameNotIn = null;

  public static final String SERIALIZED_NAME_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  @SerializedName(SERIALIZED_NAME_NAME_NOT_STARTS_WITH)
  private String nameNotStartsWith;

  public static final String SERIALIZED_NAME_NAME_STARTS_WITH = "name_starts_with";
  @SerializedName(SERIALIZED_NAME_NAME_STARTS_WITH)
  private String nameStartsWith;

  public static final String SERIALIZED_NAME_N_O_T = "NOT";
  @SerializedName(SERIALIZED_NAME_N_O_T)
  private List<MigrateTransmitterWhereInput> NOT = null;

  public static final String SERIALIZED_NAME_O_R = "OR";
  @SerializedName(SERIALIZED_NAME_O_R)
  private List<MigrateTransmitterWhereInput> OR = null;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PASSWORD_CONTAINS = "password_contains";
  @SerializedName(SERIALIZED_NAME_PASSWORD_CONTAINS)
  private String passwordContains;

  public static final String SERIALIZED_NAME_PASSWORD_ENDS_WITH = "password_ends_with";
  @SerializedName(SERIALIZED_NAME_PASSWORD_ENDS_WITH)
  private String passwordEndsWith;

  public static final String SERIALIZED_NAME_PASSWORD_GT = "password_gt";
  @SerializedName(SERIALIZED_NAME_PASSWORD_GT)
  private String passwordGt;

  public static final String SERIALIZED_NAME_PASSWORD_GTE = "password_gte";
  @SerializedName(SERIALIZED_NAME_PASSWORD_GTE)
  private String passwordGte;

  public static final String SERIALIZED_NAME_PASSWORD_IN = "password_in";
  @SerializedName(SERIALIZED_NAME_PASSWORD_IN)
  private List<String> passwordIn = null;

  public static final String SERIALIZED_NAME_PASSWORD_LT = "password_lt";
  @SerializedName(SERIALIZED_NAME_PASSWORD_LT)
  private String passwordLt;

  public static final String SERIALIZED_NAME_PASSWORD_LTE = "password_lte";
  @SerializedName(SERIALIZED_NAME_PASSWORD_LTE)
  private String passwordLte;

  public static final String SERIALIZED_NAME_PASSWORD_NOT = "password_not";
  @SerializedName(SERIALIZED_NAME_PASSWORD_NOT)
  private String passwordNot;

  public static final String SERIALIZED_NAME_PASSWORD_NOT_CONTAINS = "password_not_contains";
  @SerializedName(SERIALIZED_NAME_PASSWORD_NOT_CONTAINS)
  private String passwordNotContains;

  public static final String SERIALIZED_NAME_PASSWORD_NOT_ENDS_WITH = "password_not_ends_with";
  @SerializedName(SERIALIZED_NAME_PASSWORD_NOT_ENDS_WITH)
  private String passwordNotEndsWith;

  public static final String SERIALIZED_NAME_PASSWORD_NOT_IN = "password_not_in";
  @SerializedName(SERIALIZED_NAME_PASSWORD_NOT_IN)
  private List<String> passwordNotIn = null;

  public static final String SERIALIZED_NAME_PASSWORD_NOT_STARTS_WITH = "password_not_starts_with";
  @SerializedName(SERIALIZED_NAME_PASSWORD_NOT_STARTS_WITH)
  private String passwordNotStartsWith;

  public static final String SERIALIZED_NAME_PASSWORD_STARTS_WITH = "password_starts_with";
  @SerializedName(SERIALIZED_NAME_PASSWORD_STARTS_WITH)
  private String passwordStartsWith;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_USERNAME_CONTAINS = "username_contains";
  @SerializedName(SERIALIZED_NAME_USERNAME_CONTAINS)
  private String usernameContains;

  public static final String SERIALIZED_NAME_USERNAME_ENDS_WITH = "username_ends_with";
  @SerializedName(SERIALIZED_NAME_USERNAME_ENDS_WITH)
  private String usernameEndsWith;

  public static final String SERIALIZED_NAME_USERNAME_GT = "username_gt";
  @SerializedName(SERIALIZED_NAME_USERNAME_GT)
  private String usernameGt;

  public static final String SERIALIZED_NAME_USERNAME_GTE = "username_gte";
  @SerializedName(SERIALIZED_NAME_USERNAME_GTE)
  private String usernameGte;

  public static final String SERIALIZED_NAME_USERNAME_IN = "username_in";
  @SerializedName(SERIALIZED_NAME_USERNAME_IN)
  private List<String> usernameIn = null;

  public static final String SERIALIZED_NAME_USERNAME_LT = "username_lt";
  @SerializedName(SERIALIZED_NAME_USERNAME_LT)
  private String usernameLt;

  public static final String SERIALIZED_NAME_USERNAME_LTE = "username_lte";
  @SerializedName(SERIALIZED_NAME_USERNAME_LTE)
  private String usernameLte;

  public static final String SERIALIZED_NAME_USERNAME_NOT = "username_not";
  @SerializedName(SERIALIZED_NAME_USERNAME_NOT)
  private String usernameNot;

  public static final String SERIALIZED_NAME_USERNAME_NOT_CONTAINS = "username_not_contains";
  @SerializedName(SERIALIZED_NAME_USERNAME_NOT_CONTAINS)
  private String usernameNotContains;

  public static final String SERIALIZED_NAME_USERNAME_NOT_ENDS_WITH = "username_not_ends_with";
  @SerializedName(SERIALIZED_NAME_USERNAME_NOT_ENDS_WITH)
  private String usernameNotEndsWith;

  public static final String SERIALIZED_NAME_USERNAME_NOT_IN = "username_not_in";
  @SerializedName(SERIALIZED_NAME_USERNAME_NOT_IN)
  private List<String> usernameNotIn = null;

  public static final String SERIALIZED_NAME_USERNAME_NOT_STARTS_WITH = "username_not_starts_with";
  @SerializedName(SERIALIZED_NAME_USERNAME_NOT_STARTS_WITH)
  private String usernameNotStartsWith;

  public static final String SERIALIZED_NAME_USERNAME_STARTS_WITH = "username_starts_with";
  @SerializedName(SERIALIZED_NAME_USERNAME_STARTS_WITH)
  private String usernameStartsWith;

  public MigrateTransmitterWhereInput() { 
  }

  public MigrateTransmitterWhereInput AND(List<MigrateTransmitterWhereInput> AND) {
    
    this.AND = AND;
    return this;
  }

  public MigrateTransmitterWhereInput addANDItem(MigrateTransmitterWhereInput ANDItem) {
    if (this.AND == null) {
      this.AND = new ArrayList<MigrateTransmitterWhereInput>();
    }
    this.AND.add(ANDItem);
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MigrateTransmitterWhereInput> getAND() {
    return AND;
  }


  public void setAND(List<MigrateTransmitterWhereInput> AND) {
    this.AND = AND;
  }


  public MigrateTransmitterWhereInput createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public MigrateTransmitterWhereInput createdAtGt(String createdAtGt) {
    
    this.createdAtGt = createdAtGt;
    return this;
  }

   /**
   * Get createdAtGt
   * @return createdAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAtGt() {
    return createdAtGt;
  }


  public void setCreatedAtGt(String createdAtGt) {
    this.createdAtGt = createdAtGt;
  }


  public MigrateTransmitterWhereInput createdAtGte(String createdAtGte) {
    
    this.createdAtGte = createdAtGte;
    return this;
  }

   /**
   * Get createdAtGte
   * @return createdAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAtGte() {
    return createdAtGte;
  }


  public void setCreatedAtGte(String createdAtGte) {
    this.createdAtGte = createdAtGte;
  }


  public MigrateTransmitterWhereInput createdAtIn(List<String> createdAtIn) {
    
    this.createdAtIn = createdAtIn;
    return this;
  }

  public MigrateTransmitterWhereInput addCreatedAtInItem(String createdAtInItem) {
    if (this.createdAtIn == null) {
      this.createdAtIn = new ArrayList<String>();
    }
    this.createdAtIn.add(createdAtInItem);
    return this;
  }

   /**
   * Get createdAtIn
   * @return createdAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCreatedAtIn() {
    return createdAtIn;
  }


  public void setCreatedAtIn(List<String> createdAtIn) {
    this.createdAtIn = createdAtIn;
  }


  public MigrateTransmitterWhereInput createdAtLt(String createdAtLt) {
    
    this.createdAtLt = createdAtLt;
    return this;
  }

   /**
   * Get createdAtLt
   * @return createdAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAtLt() {
    return createdAtLt;
  }


  public void setCreatedAtLt(String createdAtLt) {
    this.createdAtLt = createdAtLt;
  }


  public MigrateTransmitterWhereInput createdAtLte(String createdAtLte) {
    
    this.createdAtLte = createdAtLte;
    return this;
  }

   /**
   * Get createdAtLte
   * @return createdAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAtLte() {
    return createdAtLte;
  }


  public void setCreatedAtLte(String createdAtLte) {
    this.createdAtLte = createdAtLte;
  }


  public MigrateTransmitterWhereInput createdAtNot(String createdAtNot) {
    
    this.createdAtNot = createdAtNot;
    return this;
  }

   /**
   * Get createdAtNot
   * @return createdAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAtNot() {
    return createdAtNot;
  }


  public void setCreatedAtNot(String createdAtNot) {
    this.createdAtNot = createdAtNot;
  }


  public MigrateTransmitterWhereInput createdAtNotIn(List<String> createdAtNotIn) {
    
    this.createdAtNotIn = createdAtNotIn;
    return this;
  }

  public MigrateTransmitterWhereInput addCreatedAtNotInItem(String createdAtNotInItem) {
    if (this.createdAtNotIn == null) {
      this.createdAtNotIn = new ArrayList<String>();
    }
    this.createdAtNotIn.add(createdAtNotInItem);
    return this;
  }

   /**
   * Get createdAtNotIn
   * @return createdAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCreatedAtNotIn() {
    return createdAtNotIn;
  }


  public void setCreatedAtNotIn(List<String> createdAtNotIn) {
    this.createdAtNotIn = createdAtNotIn;
  }


  public MigrateTransmitterWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    
    this.entityAsyncStatus = entityAsyncStatus;
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EntityAsyncStatus getEntityAsyncStatus() {
    return entityAsyncStatus;
  }


  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }


  public MigrateTransmitterWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    
    this.entityAsyncStatusIn = entityAsyncStatusIn;
    return this;
  }

  public MigrateTransmitterWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null) {
      this.entityAsyncStatusIn = new ArrayList<EntityAsyncStatus>();
    }
    this.entityAsyncStatusIn.add(entityAsyncStatusInItem);
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
    return entityAsyncStatusIn;
  }


  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }


  public MigrateTransmitterWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    
    this.entityAsyncStatusNot = entityAsyncStatusNot;
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EntityAsyncStatus getEntityAsyncStatusNot() {
    return entityAsyncStatusNot;
  }


  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }


  public MigrateTransmitterWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
    return this;
  }

  public MigrateTransmitterWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null) {
      this.entityAsyncStatusNotIn = new ArrayList<EntityAsyncStatus>();
    }
    this.entityAsyncStatusNotIn.add(entityAsyncStatusNotInItem);
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
    return entityAsyncStatusNotIn;
  }


  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }


  public MigrateTransmitterWhereInput id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public MigrateTransmitterWhereInput idContains(String idContains) {
    
    this.idContains = idContains;
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdContains() {
    return idContains;
  }


  public void setIdContains(String idContains) {
    this.idContains = idContains;
  }


  public MigrateTransmitterWhereInput idEndsWith(String idEndsWith) {
    
    this.idEndsWith = idEndsWith;
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdEndsWith() {
    return idEndsWith;
  }


  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = idEndsWith;
  }


  public MigrateTransmitterWhereInput idGt(String idGt) {
    
    this.idGt = idGt;
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdGt() {
    return idGt;
  }


  public void setIdGt(String idGt) {
    this.idGt = idGt;
  }


  public MigrateTransmitterWhereInput idGte(String idGte) {
    
    this.idGte = idGte;
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdGte() {
    return idGte;
  }


  public void setIdGte(String idGte) {
    this.idGte = idGte;
  }


  public MigrateTransmitterWhereInput idIn(List<String> idIn) {
    
    this.idIn = idIn;
    return this;
  }

  public MigrateTransmitterWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null) {
      this.idIn = new ArrayList<String>();
    }
    this.idIn.add(idInItem);
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIdIn() {
    return idIn;
  }


  public void setIdIn(List<String> idIn) {
    this.idIn = idIn;
  }


  public MigrateTransmitterWhereInput idLt(String idLt) {
    
    this.idLt = idLt;
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdLt() {
    return idLt;
  }


  public void setIdLt(String idLt) {
    this.idLt = idLt;
  }


  public MigrateTransmitterWhereInput idLte(String idLte) {
    
    this.idLte = idLte;
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdLte() {
    return idLte;
  }


  public void setIdLte(String idLte) {
    this.idLte = idLte;
  }


  public MigrateTransmitterWhereInput idNot(String idNot) {
    
    this.idNot = idNot;
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdNot() {
    return idNot;
  }


  public void setIdNot(String idNot) {
    this.idNot = idNot;
  }


  public MigrateTransmitterWhereInput idNotContains(String idNotContains) {
    
    this.idNotContains = idNotContains;
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdNotContains() {
    return idNotContains;
  }


  public void setIdNotContains(String idNotContains) {
    this.idNotContains = idNotContains;
  }


  public MigrateTransmitterWhereInput idNotEndsWith(String idNotEndsWith) {
    
    this.idNotEndsWith = idNotEndsWith;
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdNotEndsWith() {
    return idNotEndsWith;
  }


  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }


  public MigrateTransmitterWhereInput idNotIn(List<String> idNotIn) {
    
    this.idNotIn = idNotIn;
    return this;
  }

  public MigrateTransmitterWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null) {
      this.idNotIn = new ArrayList<String>();
    }
    this.idNotIn.add(idNotInItem);
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIdNotIn() {
    return idNotIn;
  }


  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = idNotIn;
  }


  public MigrateTransmitterWhereInput idNotStartsWith(String idNotStartsWith) {
    
    this.idNotStartsWith = idNotStartsWith;
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdNotStartsWith() {
    return idNotStartsWith;
  }


  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }


  public MigrateTransmitterWhereInput idStartsWith(String idStartsWith) {
    
    this.idStartsWith = idStartsWith;
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdStartsWith() {
    return idStartsWith;
  }


  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = idStartsWith;
  }


  public MigrateTransmitterWhereInput ip(String ip) {
    
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIp() {
    return ip;
  }


  public void setIp(String ip) {
    this.ip = ip;
  }


  public MigrateTransmitterWhereInput ipContains(String ipContains) {
    
    this.ipContains = ipContains;
    return this;
  }

   /**
   * Get ipContains
   * @return ipContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpContains() {
    return ipContains;
  }


  public void setIpContains(String ipContains) {
    this.ipContains = ipContains;
  }


  public MigrateTransmitterWhereInput ipEndsWith(String ipEndsWith) {
    
    this.ipEndsWith = ipEndsWith;
    return this;
  }

   /**
   * Get ipEndsWith
   * @return ipEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpEndsWith() {
    return ipEndsWith;
  }


  public void setIpEndsWith(String ipEndsWith) {
    this.ipEndsWith = ipEndsWith;
  }


  public MigrateTransmitterWhereInput ipGt(String ipGt) {
    
    this.ipGt = ipGt;
    return this;
  }

   /**
   * Get ipGt
   * @return ipGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpGt() {
    return ipGt;
  }


  public void setIpGt(String ipGt) {
    this.ipGt = ipGt;
  }


  public MigrateTransmitterWhereInput ipGte(String ipGte) {
    
    this.ipGte = ipGte;
    return this;
  }

   /**
   * Get ipGte
   * @return ipGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpGte() {
    return ipGte;
  }


  public void setIpGte(String ipGte) {
    this.ipGte = ipGte;
  }


  public MigrateTransmitterWhereInput ipIn(List<String> ipIn) {
    
    this.ipIn = ipIn;
    return this;
  }

  public MigrateTransmitterWhereInput addIpInItem(String ipInItem) {
    if (this.ipIn == null) {
      this.ipIn = new ArrayList<String>();
    }
    this.ipIn.add(ipInItem);
    return this;
  }

   /**
   * Get ipIn
   * @return ipIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIpIn() {
    return ipIn;
  }


  public void setIpIn(List<String> ipIn) {
    this.ipIn = ipIn;
  }


  public MigrateTransmitterWhereInput ipLt(String ipLt) {
    
    this.ipLt = ipLt;
    return this;
  }

   /**
   * Get ipLt
   * @return ipLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpLt() {
    return ipLt;
  }


  public void setIpLt(String ipLt) {
    this.ipLt = ipLt;
  }


  public MigrateTransmitterWhereInput ipLte(String ipLte) {
    
    this.ipLte = ipLte;
    return this;
  }

   /**
   * Get ipLte
   * @return ipLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpLte() {
    return ipLte;
  }


  public void setIpLte(String ipLte) {
    this.ipLte = ipLte;
  }


  public MigrateTransmitterWhereInput ipNot(String ipNot) {
    
    this.ipNot = ipNot;
    return this;
  }

   /**
   * Get ipNot
   * @return ipNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpNot() {
    return ipNot;
  }


  public void setIpNot(String ipNot) {
    this.ipNot = ipNot;
  }


  public MigrateTransmitterWhereInput ipNotContains(String ipNotContains) {
    
    this.ipNotContains = ipNotContains;
    return this;
  }

   /**
   * Get ipNotContains
   * @return ipNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpNotContains() {
    return ipNotContains;
  }


  public void setIpNotContains(String ipNotContains) {
    this.ipNotContains = ipNotContains;
  }


  public MigrateTransmitterWhereInput ipNotEndsWith(String ipNotEndsWith) {
    
    this.ipNotEndsWith = ipNotEndsWith;
    return this;
  }

   /**
   * Get ipNotEndsWith
   * @return ipNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpNotEndsWith() {
    return ipNotEndsWith;
  }


  public void setIpNotEndsWith(String ipNotEndsWith) {
    this.ipNotEndsWith = ipNotEndsWith;
  }


  public MigrateTransmitterWhereInput ipNotIn(List<String> ipNotIn) {
    
    this.ipNotIn = ipNotIn;
    return this;
  }

  public MigrateTransmitterWhereInput addIpNotInItem(String ipNotInItem) {
    if (this.ipNotIn == null) {
      this.ipNotIn = new ArrayList<String>();
    }
    this.ipNotIn.add(ipNotInItem);
    return this;
  }

   /**
   * Get ipNotIn
   * @return ipNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIpNotIn() {
    return ipNotIn;
  }


  public void setIpNotIn(List<String> ipNotIn) {
    this.ipNotIn = ipNotIn;
  }


  public MigrateTransmitterWhereInput ipNotStartsWith(String ipNotStartsWith) {
    
    this.ipNotStartsWith = ipNotStartsWith;
    return this;
  }

   /**
   * Get ipNotStartsWith
   * @return ipNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpNotStartsWith() {
    return ipNotStartsWith;
  }


  public void setIpNotStartsWith(String ipNotStartsWith) {
    this.ipNotStartsWith = ipNotStartsWith;
  }


  public MigrateTransmitterWhereInput ipStartsWith(String ipStartsWith) {
    
    this.ipStartsWith = ipStartsWith;
    return this;
  }

   /**
   * Get ipStartsWith
   * @return ipStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpStartsWith() {
    return ipStartsWith;
  }


  public void setIpStartsWith(String ipStartsWith) {
    this.ipStartsWith = ipStartsWith;
  }


  public MigrateTransmitterWhereInput name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public MigrateTransmitterWhereInput nameContains(String nameContains) {
    
    this.nameContains = nameContains;
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameContains() {
    return nameContains;
  }


  public void setNameContains(String nameContains) {
    this.nameContains = nameContains;
  }


  public MigrateTransmitterWhereInput nameEndsWith(String nameEndsWith) {
    
    this.nameEndsWith = nameEndsWith;
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameEndsWith() {
    return nameEndsWith;
  }


  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }


  public MigrateTransmitterWhereInput nameGt(String nameGt) {
    
    this.nameGt = nameGt;
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameGt() {
    return nameGt;
  }


  public void setNameGt(String nameGt) {
    this.nameGt = nameGt;
  }


  public MigrateTransmitterWhereInput nameGte(String nameGte) {
    
    this.nameGte = nameGte;
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameGte() {
    return nameGte;
  }


  public void setNameGte(String nameGte) {
    this.nameGte = nameGte;
  }


  public MigrateTransmitterWhereInput nameIn(List<String> nameIn) {
    
    this.nameIn = nameIn;
    return this;
  }

  public MigrateTransmitterWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null) {
      this.nameIn = new ArrayList<String>();
    }
    this.nameIn.add(nameInItem);
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getNameIn() {
    return nameIn;
  }


  public void setNameIn(List<String> nameIn) {
    this.nameIn = nameIn;
  }


  public MigrateTransmitterWhereInput nameLt(String nameLt) {
    
    this.nameLt = nameLt;
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameLt() {
    return nameLt;
  }


  public void setNameLt(String nameLt) {
    this.nameLt = nameLt;
  }


  public MigrateTransmitterWhereInput nameLte(String nameLte) {
    
    this.nameLte = nameLte;
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameLte() {
    return nameLte;
  }


  public void setNameLte(String nameLte) {
    this.nameLte = nameLte;
  }


  public MigrateTransmitterWhereInput nameNot(String nameNot) {
    
    this.nameNot = nameNot;
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameNot() {
    return nameNot;
  }


  public void setNameNot(String nameNot) {
    this.nameNot = nameNot;
  }


  public MigrateTransmitterWhereInput nameNotContains(String nameNotContains) {
    
    this.nameNotContains = nameNotContains;
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameNotContains() {
    return nameNotContains;
  }


  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = nameNotContains;
  }


  public MigrateTransmitterWhereInput nameNotEndsWith(String nameNotEndsWith) {
    
    this.nameNotEndsWith = nameNotEndsWith;
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameNotEndsWith() {
    return nameNotEndsWith;
  }


  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }


  public MigrateTransmitterWhereInput nameNotIn(List<String> nameNotIn) {
    
    this.nameNotIn = nameNotIn;
    return this;
  }

  public MigrateTransmitterWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null) {
      this.nameNotIn = new ArrayList<String>();
    }
    this.nameNotIn.add(nameNotInItem);
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getNameNotIn() {
    return nameNotIn;
  }


  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }


  public MigrateTransmitterWhereInput nameNotStartsWith(String nameNotStartsWith) {
    
    this.nameNotStartsWith = nameNotStartsWith;
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameNotStartsWith() {
    return nameNotStartsWith;
  }


  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }


  public MigrateTransmitterWhereInput nameStartsWith(String nameStartsWith) {
    
    this.nameStartsWith = nameStartsWith;
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameStartsWith() {
    return nameStartsWith;
  }


  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }


  public MigrateTransmitterWhereInput NOT(List<MigrateTransmitterWhereInput> NOT) {
    
    this.NOT = NOT;
    return this;
  }

  public MigrateTransmitterWhereInput addNOTItem(MigrateTransmitterWhereInput NOTItem) {
    if (this.NOT == null) {
      this.NOT = new ArrayList<MigrateTransmitterWhereInput>();
    }
    this.NOT.add(NOTItem);
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MigrateTransmitterWhereInput> getNOT() {
    return NOT;
  }


  public void setNOT(List<MigrateTransmitterWhereInput> NOT) {
    this.NOT = NOT;
  }


  public MigrateTransmitterWhereInput OR(List<MigrateTransmitterWhereInput> OR) {
    
    this.OR = OR;
    return this;
  }

  public MigrateTransmitterWhereInput addORItem(MigrateTransmitterWhereInput ORItem) {
    if (this.OR == null) {
      this.OR = new ArrayList<MigrateTransmitterWhereInput>();
    }
    this.OR.add(ORItem);
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MigrateTransmitterWhereInput> getOR() {
    return OR;
  }


  public void setOR(List<MigrateTransmitterWhereInput> OR) {
    this.OR = OR;
  }


  public MigrateTransmitterWhereInput password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public MigrateTransmitterWhereInput passwordContains(String passwordContains) {
    
    this.passwordContains = passwordContains;
    return this;
  }

   /**
   * Get passwordContains
   * @return passwordContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordContains() {
    return passwordContains;
  }


  public void setPasswordContains(String passwordContains) {
    this.passwordContains = passwordContains;
  }


  public MigrateTransmitterWhereInput passwordEndsWith(String passwordEndsWith) {
    
    this.passwordEndsWith = passwordEndsWith;
    return this;
  }

   /**
   * Get passwordEndsWith
   * @return passwordEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordEndsWith() {
    return passwordEndsWith;
  }


  public void setPasswordEndsWith(String passwordEndsWith) {
    this.passwordEndsWith = passwordEndsWith;
  }


  public MigrateTransmitterWhereInput passwordGt(String passwordGt) {
    
    this.passwordGt = passwordGt;
    return this;
  }

   /**
   * Get passwordGt
   * @return passwordGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordGt() {
    return passwordGt;
  }


  public void setPasswordGt(String passwordGt) {
    this.passwordGt = passwordGt;
  }


  public MigrateTransmitterWhereInput passwordGte(String passwordGte) {
    
    this.passwordGte = passwordGte;
    return this;
  }

   /**
   * Get passwordGte
   * @return passwordGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordGte() {
    return passwordGte;
  }


  public void setPasswordGte(String passwordGte) {
    this.passwordGte = passwordGte;
  }


  public MigrateTransmitterWhereInput passwordIn(List<String> passwordIn) {
    
    this.passwordIn = passwordIn;
    return this;
  }

  public MigrateTransmitterWhereInput addPasswordInItem(String passwordInItem) {
    if (this.passwordIn == null) {
      this.passwordIn = new ArrayList<String>();
    }
    this.passwordIn.add(passwordInItem);
    return this;
  }

   /**
   * Get passwordIn
   * @return passwordIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPasswordIn() {
    return passwordIn;
  }


  public void setPasswordIn(List<String> passwordIn) {
    this.passwordIn = passwordIn;
  }


  public MigrateTransmitterWhereInput passwordLt(String passwordLt) {
    
    this.passwordLt = passwordLt;
    return this;
  }

   /**
   * Get passwordLt
   * @return passwordLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordLt() {
    return passwordLt;
  }


  public void setPasswordLt(String passwordLt) {
    this.passwordLt = passwordLt;
  }


  public MigrateTransmitterWhereInput passwordLte(String passwordLte) {
    
    this.passwordLte = passwordLte;
    return this;
  }

   /**
   * Get passwordLte
   * @return passwordLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordLte() {
    return passwordLte;
  }


  public void setPasswordLte(String passwordLte) {
    this.passwordLte = passwordLte;
  }


  public MigrateTransmitterWhereInput passwordNot(String passwordNot) {
    
    this.passwordNot = passwordNot;
    return this;
  }

   /**
   * Get passwordNot
   * @return passwordNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordNot() {
    return passwordNot;
  }


  public void setPasswordNot(String passwordNot) {
    this.passwordNot = passwordNot;
  }


  public MigrateTransmitterWhereInput passwordNotContains(String passwordNotContains) {
    
    this.passwordNotContains = passwordNotContains;
    return this;
  }

   /**
   * Get passwordNotContains
   * @return passwordNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordNotContains() {
    return passwordNotContains;
  }


  public void setPasswordNotContains(String passwordNotContains) {
    this.passwordNotContains = passwordNotContains;
  }


  public MigrateTransmitterWhereInput passwordNotEndsWith(String passwordNotEndsWith) {
    
    this.passwordNotEndsWith = passwordNotEndsWith;
    return this;
  }

   /**
   * Get passwordNotEndsWith
   * @return passwordNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordNotEndsWith() {
    return passwordNotEndsWith;
  }


  public void setPasswordNotEndsWith(String passwordNotEndsWith) {
    this.passwordNotEndsWith = passwordNotEndsWith;
  }


  public MigrateTransmitterWhereInput passwordNotIn(List<String> passwordNotIn) {
    
    this.passwordNotIn = passwordNotIn;
    return this;
  }

  public MigrateTransmitterWhereInput addPasswordNotInItem(String passwordNotInItem) {
    if (this.passwordNotIn == null) {
      this.passwordNotIn = new ArrayList<String>();
    }
    this.passwordNotIn.add(passwordNotInItem);
    return this;
  }

   /**
   * Get passwordNotIn
   * @return passwordNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPasswordNotIn() {
    return passwordNotIn;
  }


  public void setPasswordNotIn(List<String> passwordNotIn) {
    this.passwordNotIn = passwordNotIn;
  }


  public MigrateTransmitterWhereInput passwordNotStartsWith(String passwordNotStartsWith) {
    
    this.passwordNotStartsWith = passwordNotStartsWith;
    return this;
  }

   /**
   * Get passwordNotStartsWith
   * @return passwordNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordNotStartsWith() {
    return passwordNotStartsWith;
  }


  public void setPasswordNotStartsWith(String passwordNotStartsWith) {
    this.passwordNotStartsWith = passwordNotStartsWith;
  }


  public MigrateTransmitterWhereInput passwordStartsWith(String passwordStartsWith) {
    
    this.passwordStartsWith = passwordStartsWith;
    return this;
  }

   /**
   * Get passwordStartsWith
   * @return passwordStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordStartsWith() {
    return passwordStartsWith;
  }


  public void setPasswordStartsWith(String passwordStartsWith) {
    this.passwordStartsWith = passwordStartsWith;
  }


  public MigrateTransmitterWhereInput username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public MigrateTransmitterWhereInput usernameContains(String usernameContains) {
    
    this.usernameContains = usernameContains;
    return this;
  }

   /**
   * Get usernameContains
   * @return usernameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameContains() {
    return usernameContains;
  }


  public void setUsernameContains(String usernameContains) {
    this.usernameContains = usernameContains;
  }


  public MigrateTransmitterWhereInput usernameEndsWith(String usernameEndsWith) {
    
    this.usernameEndsWith = usernameEndsWith;
    return this;
  }

   /**
   * Get usernameEndsWith
   * @return usernameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameEndsWith() {
    return usernameEndsWith;
  }


  public void setUsernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = usernameEndsWith;
  }


  public MigrateTransmitterWhereInput usernameGt(String usernameGt) {
    
    this.usernameGt = usernameGt;
    return this;
  }

   /**
   * Get usernameGt
   * @return usernameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameGt() {
    return usernameGt;
  }


  public void setUsernameGt(String usernameGt) {
    this.usernameGt = usernameGt;
  }


  public MigrateTransmitterWhereInput usernameGte(String usernameGte) {
    
    this.usernameGte = usernameGte;
    return this;
  }

   /**
   * Get usernameGte
   * @return usernameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameGte() {
    return usernameGte;
  }


  public void setUsernameGte(String usernameGte) {
    this.usernameGte = usernameGte;
  }


  public MigrateTransmitterWhereInput usernameIn(List<String> usernameIn) {
    
    this.usernameIn = usernameIn;
    return this;
  }

  public MigrateTransmitterWhereInput addUsernameInItem(String usernameInItem) {
    if (this.usernameIn == null) {
      this.usernameIn = new ArrayList<String>();
    }
    this.usernameIn.add(usernameInItem);
    return this;
  }

   /**
   * Get usernameIn
   * @return usernameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUsernameIn() {
    return usernameIn;
  }


  public void setUsernameIn(List<String> usernameIn) {
    this.usernameIn = usernameIn;
  }


  public MigrateTransmitterWhereInput usernameLt(String usernameLt) {
    
    this.usernameLt = usernameLt;
    return this;
  }

   /**
   * Get usernameLt
   * @return usernameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameLt() {
    return usernameLt;
  }


  public void setUsernameLt(String usernameLt) {
    this.usernameLt = usernameLt;
  }


  public MigrateTransmitterWhereInput usernameLte(String usernameLte) {
    
    this.usernameLte = usernameLte;
    return this;
  }

   /**
   * Get usernameLte
   * @return usernameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameLte() {
    return usernameLte;
  }


  public void setUsernameLte(String usernameLte) {
    this.usernameLte = usernameLte;
  }


  public MigrateTransmitterWhereInput usernameNot(String usernameNot) {
    
    this.usernameNot = usernameNot;
    return this;
  }

   /**
   * Get usernameNot
   * @return usernameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameNot() {
    return usernameNot;
  }


  public void setUsernameNot(String usernameNot) {
    this.usernameNot = usernameNot;
  }


  public MigrateTransmitterWhereInput usernameNotContains(String usernameNotContains) {
    
    this.usernameNotContains = usernameNotContains;
    return this;
  }

   /**
   * Get usernameNotContains
   * @return usernameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameNotContains() {
    return usernameNotContains;
  }


  public void setUsernameNotContains(String usernameNotContains) {
    this.usernameNotContains = usernameNotContains;
  }


  public MigrateTransmitterWhereInput usernameNotEndsWith(String usernameNotEndsWith) {
    
    this.usernameNotEndsWith = usernameNotEndsWith;
    return this;
  }

   /**
   * Get usernameNotEndsWith
   * @return usernameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameNotEndsWith() {
    return usernameNotEndsWith;
  }


  public void setUsernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = usernameNotEndsWith;
  }


  public MigrateTransmitterWhereInput usernameNotIn(List<String> usernameNotIn) {
    
    this.usernameNotIn = usernameNotIn;
    return this;
  }

  public MigrateTransmitterWhereInput addUsernameNotInItem(String usernameNotInItem) {
    if (this.usernameNotIn == null) {
      this.usernameNotIn = new ArrayList<String>();
    }
    this.usernameNotIn.add(usernameNotInItem);
    return this;
  }

   /**
   * Get usernameNotIn
   * @return usernameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUsernameNotIn() {
    return usernameNotIn;
  }


  public void setUsernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = usernameNotIn;
  }


  public MigrateTransmitterWhereInput usernameNotStartsWith(String usernameNotStartsWith) {
    
    this.usernameNotStartsWith = usernameNotStartsWith;
    return this;
  }

   /**
   * Get usernameNotStartsWith
   * @return usernameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameNotStartsWith() {
    return usernameNotStartsWith;
  }


  public void setUsernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = usernameNotStartsWith;
  }


  public MigrateTransmitterWhereInput usernameStartsWith(String usernameStartsWith) {
    
    this.usernameStartsWith = usernameStartsWith;
    return this;
  }

   /**
   * Get usernameStartsWith
   * @return usernameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsernameStartsWith() {
    return usernameStartsWith;
  }


  public void setUsernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = usernameStartsWith;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MigrateTransmitterWhereInput migrateTransmitterWhereInput = (MigrateTransmitterWhereInput) o;
    return Objects.equals(this.AND, migrateTransmitterWhereInput.AND) &&
        Objects.equals(this.createdAt, migrateTransmitterWhereInput.createdAt) &&
        Objects.equals(this.createdAtGt, migrateTransmitterWhereInput.createdAtGt) &&
        Objects.equals(this.createdAtGte, migrateTransmitterWhereInput.createdAtGte) &&
        Objects.equals(this.createdAtIn, migrateTransmitterWhereInput.createdAtIn) &&
        Objects.equals(this.createdAtLt, migrateTransmitterWhereInput.createdAtLt) &&
        Objects.equals(this.createdAtLte, migrateTransmitterWhereInput.createdAtLte) &&
        Objects.equals(this.createdAtNot, migrateTransmitterWhereInput.createdAtNot) &&
        Objects.equals(this.createdAtNotIn, migrateTransmitterWhereInput.createdAtNotIn) &&
        Objects.equals(this.entityAsyncStatus, migrateTransmitterWhereInput.entityAsyncStatus) &&
        Objects.equals(this.entityAsyncStatusIn, migrateTransmitterWhereInput.entityAsyncStatusIn) &&
        Objects.equals(this.entityAsyncStatusNot, migrateTransmitterWhereInput.entityAsyncStatusNot) &&
        Objects.equals(this.entityAsyncStatusNotIn, migrateTransmitterWhereInput.entityAsyncStatusNotIn) &&
        Objects.equals(this.id, migrateTransmitterWhereInput.id) &&
        Objects.equals(this.idContains, migrateTransmitterWhereInput.idContains) &&
        Objects.equals(this.idEndsWith, migrateTransmitterWhereInput.idEndsWith) &&
        Objects.equals(this.idGt, migrateTransmitterWhereInput.idGt) &&
        Objects.equals(this.idGte, migrateTransmitterWhereInput.idGte) &&
        Objects.equals(this.idIn, migrateTransmitterWhereInput.idIn) &&
        Objects.equals(this.idLt, migrateTransmitterWhereInput.idLt) &&
        Objects.equals(this.idLte, migrateTransmitterWhereInput.idLte) &&
        Objects.equals(this.idNot, migrateTransmitterWhereInput.idNot) &&
        Objects.equals(this.idNotContains, migrateTransmitterWhereInput.idNotContains) &&
        Objects.equals(this.idNotEndsWith, migrateTransmitterWhereInput.idNotEndsWith) &&
        Objects.equals(this.idNotIn, migrateTransmitterWhereInput.idNotIn) &&
        Objects.equals(this.idNotStartsWith, migrateTransmitterWhereInput.idNotStartsWith) &&
        Objects.equals(this.idStartsWith, migrateTransmitterWhereInput.idStartsWith) &&
        Objects.equals(this.ip, migrateTransmitterWhereInput.ip) &&
        Objects.equals(this.ipContains, migrateTransmitterWhereInput.ipContains) &&
        Objects.equals(this.ipEndsWith, migrateTransmitterWhereInput.ipEndsWith) &&
        Objects.equals(this.ipGt, migrateTransmitterWhereInput.ipGt) &&
        Objects.equals(this.ipGte, migrateTransmitterWhereInput.ipGte) &&
        Objects.equals(this.ipIn, migrateTransmitterWhereInput.ipIn) &&
        Objects.equals(this.ipLt, migrateTransmitterWhereInput.ipLt) &&
        Objects.equals(this.ipLte, migrateTransmitterWhereInput.ipLte) &&
        Objects.equals(this.ipNot, migrateTransmitterWhereInput.ipNot) &&
        Objects.equals(this.ipNotContains, migrateTransmitterWhereInput.ipNotContains) &&
        Objects.equals(this.ipNotEndsWith, migrateTransmitterWhereInput.ipNotEndsWith) &&
        Objects.equals(this.ipNotIn, migrateTransmitterWhereInput.ipNotIn) &&
        Objects.equals(this.ipNotStartsWith, migrateTransmitterWhereInput.ipNotStartsWith) &&
        Objects.equals(this.ipStartsWith, migrateTransmitterWhereInput.ipStartsWith) &&
        Objects.equals(this.name, migrateTransmitterWhereInput.name) &&
        Objects.equals(this.nameContains, migrateTransmitterWhereInput.nameContains) &&
        Objects.equals(this.nameEndsWith, migrateTransmitterWhereInput.nameEndsWith) &&
        Objects.equals(this.nameGt, migrateTransmitterWhereInput.nameGt) &&
        Objects.equals(this.nameGte, migrateTransmitterWhereInput.nameGte) &&
        Objects.equals(this.nameIn, migrateTransmitterWhereInput.nameIn) &&
        Objects.equals(this.nameLt, migrateTransmitterWhereInput.nameLt) &&
        Objects.equals(this.nameLte, migrateTransmitterWhereInput.nameLte) &&
        Objects.equals(this.nameNot, migrateTransmitterWhereInput.nameNot) &&
        Objects.equals(this.nameNotContains, migrateTransmitterWhereInput.nameNotContains) &&
        Objects.equals(this.nameNotEndsWith, migrateTransmitterWhereInput.nameNotEndsWith) &&
        Objects.equals(this.nameNotIn, migrateTransmitterWhereInput.nameNotIn) &&
        Objects.equals(this.nameNotStartsWith, migrateTransmitterWhereInput.nameNotStartsWith) &&
        Objects.equals(this.nameStartsWith, migrateTransmitterWhereInput.nameStartsWith) &&
        Objects.equals(this.NOT, migrateTransmitterWhereInput.NOT) &&
        Objects.equals(this.OR, migrateTransmitterWhereInput.OR) &&
        Objects.equals(this.password, migrateTransmitterWhereInput.password) &&
        Objects.equals(this.passwordContains, migrateTransmitterWhereInput.passwordContains) &&
        Objects.equals(this.passwordEndsWith, migrateTransmitterWhereInput.passwordEndsWith) &&
        Objects.equals(this.passwordGt, migrateTransmitterWhereInput.passwordGt) &&
        Objects.equals(this.passwordGte, migrateTransmitterWhereInput.passwordGte) &&
        Objects.equals(this.passwordIn, migrateTransmitterWhereInput.passwordIn) &&
        Objects.equals(this.passwordLt, migrateTransmitterWhereInput.passwordLt) &&
        Objects.equals(this.passwordLte, migrateTransmitterWhereInput.passwordLte) &&
        Objects.equals(this.passwordNot, migrateTransmitterWhereInput.passwordNot) &&
        Objects.equals(this.passwordNotContains, migrateTransmitterWhereInput.passwordNotContains) &&
        Objects.equals(this.passwordNotEndsWith, migrateTransmitterWhereInput.passwordNotEndsWith) &&
        Objects.equals(this.passwordNotIn, migrateTransmitterWhereInput.passwordNotIn) &&
        Objects.equals(this.passwordNotStartsWith, migrateTransmitterWhereInput.passwordNotStartsWith) &&
        Objects.equals(this.passwordStartsWith, migrateTransmitterWhereInput.passwordStartsWith) &&
        Objects.equals(this.username, migrateTransmitterWhereInput.username) &&
        Objects.equals(this.usernameContains, migrateTransmitterWhereInput.usernameContains) &&
        Objects.equals(this.usernameEndsWith, migrateTransmitterWhereInput.usernameEndsWith) &&
        Objects.equals(this.usernameGt, migrateTransmitterWhereInput.usernameGt) &&
        Objects.equals(this.usernameGte, migrateTransmitterWhereInput.usernameGte) &&
        Objects.equals(this.usernameIn, migrateTransmitterWhereInput.usernameIn) &&
        Objects.equals(this.usernameLt, migrateTransmitterWhereInput.usernameLt) &&
        Objects.equals(this.usernameLte, migrateTransmitterWhereInput.usernameLte) &&
        Objects.equals(this.usernameNot, migrateTransmitterWhereInput.usernameNot) &&
        Objects.equals(this.usernameNotContains, migrateTransmitterWhereInput.usernameNotContains) &&
        Objects.equals(this.usernameNotEndsWith, migrateTransmitterWhereInput.usernameNotEndsWith) &&
        Objects.equals(this.usernameNotIn, migrateTransmitterWhereInput.usernameNotIn) &&
        Objects.equals(this.usernameNotStartsWith, migrateTransmitterWhereInput.usernameNotStartsWith) &&
        Objects.equals(this.usernameStartsWith, migrateTransmitterWhereInput.usernameStartsWith);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(AND, createdAt, createdAtGt, createdAtGte, createdAtIn, createdAtLt, createdAtLte, createdAtNot, createdAtNotIn, entityAsyncStatus, entityAsyncStatusIn, entityAsyncStatusNot, entityAsyncStatusNotIn, id, idContains, idEndsWith, idGt, idGte, idIn, idLt, idLte, idNot, idNotContains, idNotEndsWith, idNotIn, idNotStartsWith, idStartsWith, ip, ipContains, ipEndsWith, ipGt, ipGte, ipIn, ipLt, ipLte, ipNot, ipNotContains, ipNotEndsWith, ipNotIn, ipNotStartsWith, ipStartsWith, name, nameContains, nameEndsWith, nameGt, nameGte, nameIn, nameLt, nameLte, nameNot, nameNotContains, nameNotEndsWith, nameNotIn, nameNotStartsWith, nameStartsWith, NOT, OR, password, passwordContains, passwordEndsWith, passwordGt, passwordGte, passwordIn, passwordLt, passwordLte, passwordNot, passwordNotContains, passwordNotEndsWith, passwordNotIn, passwordNotStartsWith, passwordStartsWith, username, usernameContains, usernameEndsWith, usernameGt, usernameGte, usernameIn, usernameLt, usernameLte, usernameNot, usernameNotContains, usernameNotEndsWith, usernameNotIn, usernameNotStartsWith, usernameStartsWith);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MigrateTransmitterWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdAtGt: ").append(toIndentedString(createdAtGt)).append("\n");
    sb.append("    createdAtGte: ").append(toIndentedString(createdAtGte)).append("\n");
    sb.append("    createdAtIn: ").append(toIndentedString(createdAtIn)).append("\n");
    sb.append("    createdAtLt: ").append(toIndentedString(createdAtLt)).append("\n");
    sb.append("    createdAtLte: ").append(toIndentedString(createdAtLte)).append("\n");
    sb.append("    createdAtNot: ").append(toIndentedString(createdAtNot)).append("\n");
    sb.append("    createdAtNotIn: ").append(toIndentedString(createdAtNotIn)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    ipContains: ").append(toIndentedString(ipContains)).append("\n");
    sb.append("    ipEndsWith: ").append(toIndentedString(ipEndsWith)).append("\n");
    sb.append("    ipGt: ").append(toIndentedString(ipGt)).append("\n");
    sb.append("    ipGte: ").append(toIndentedString(ipGte)).append("\n");
    sb.append("    ipIn: ").append(toIndentedString(ipIn)).append("\n");
    sb.append("    ipLt: ").append(toIndentedString(ipLt)).append("\n");
    sb.append("    ipLte: ").append(toIndentedString(ipLte)).append("\n");
    sb.append("    ipNot: ").append(toIndentedString(ipNot)).append("\n");
    sb.append("    ipNotContains: ").append(toIndentedString(ipNotContains)).append("\n");
    sb.append("    ipNotEndsWith: ").append(toIndentedString(ipNotEndsWith)).append("\n");
    sb.append("    ipNotIn: ").append(toIndentedString(ipNotIn)).append("\n");
    sb.append("    ipNotStartsWith: ").append(toIndentedString(ipNotStartsWith)).append("\n");
    sb.append("    ipStartsWith: ").append(toIndentedString(ipStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordContains: ").append(toIndentedString(passwordContains)).append("\n");
    sb.append("    passwordEndsWith: ").append(toIndentedString(passwordEndsWith)).append("\n");
    sb.append("    passwordGt: ").append(toIndentedString(passwordGt)).append("\n");
    sb.append("    passwordGte: ").append(toIndentedString(passwordGte)).append("\n");
    sb.append("    passwordIn: ").append(toIndentedString(passwordIn)).append("\n");
    sb.append("    passwordLt: ").append(toIndentedString(passwordLt)).append("\n");
    sb.append("    passwordLte: ").append(toIndentedString(passwordLte)).append("\n");
    sb.append("    passwordNot: ").append(toIndentedString(passwordNot)).append("\n");
    sb.append("    passwordNotContains: ").append(toIndentedString(passwordNotContains)).append("\n");
    sb.append("    passwordNotEndsWith: ").append(toIndentedString(passwordNotEndsWith)).append("\n");
    sb.append("    passwordNotIn: ").append(toIndentedString(passwordNotIn)).append("\n");
    sb.append("    passwordNotStartsWith: ").append(toIndentedString(passwordNotStartsWith)).append("\n");
    sb.append("    passwordStartsWith: ").append(toIndentedString(passwordStartsWith)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    usernameContains: ").append(toIndentedString(usernameContains)).append("\n");
    sb.append("    usernameEndsWith: ").append(toIndentedString(usernameEndsWith)).append("\n");
    sb.append("    usernameGt: ").append(toIndentedString(usernameGt)).append("\n");
    sb.append("    usernameGte: ").append(toIndentedString(usernameGte)).append("\n");
    sb.append("    usernameIn: ").append(toIndentedString(usernameIn)).append("\n");
    sb.append("    usernameLt: ").append(toIndentedString(usernameLt)).append("\n");
    sb.append("    usernameLte: ").append(toIndentedString(usernameLte)).append("\n");
    sb.append("    usernameNot: ").append(toIndentedString(usernameNot)).append("\n");
    sb.append("    usernameNotContains: ").append(toIndentedString(usernameNotContains)).append("\n");
    sb.append("    usernameNotEndsWith: ").append(toIndentedString(usernameNotEndsWith)).append("\n");
    sb.append("    usernameNotIn: ").append(toIndentedString(usernameNotIn)).append("\n");
    sb.append("    usernameNotStartsWith: ").append(toIndentedString(usernameNotStartsWith)).append("\n");
    sb.append("    usernameStartsWith: ").append(toIndentedString(usernameStartsWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

