/*
 * CloudTower APIs
 * cloudtower operation API and SDK
 *
 * * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.NestedCluster;
import com.smartx.tower.model.NestedSnapshotGroup;
import com.smartx.tower.model.NestedSnapshotPlan;
import com.smartx.tower.model.SnapshotPlanExecuteStatus;
import com.smartx.tower.model.SnapshotPlanTaskType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * SnapshotPlanTask
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SnapshotPlanTask {
  public static final String SERIALIZED_NAME_CLUSTER = "cluster";
  @SerializedName(SERIALIZED_NAME_CLUSTER)
  private NestedCluster cluster;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  @SerializedName(SERIALIZED_NAME_ENTITY_ASYNC_STATUS)
  private EntityAsyncStatus entityAsyncStatus;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INTERNAL = "internal";
  @SerializedName(SERIALIZED_NAME_INTERNAL)
  private Boolean internal;

  public static final String SERIALIZED_NAME_LOCAL_ID = "local_id";
  @SerializedName(SERIALIZED_NAME_LOCAL_ID)
  private String localId;

  public static final String SERIALIZED_NAME_SNAPSHOT_GROUP = "snapshotGroup";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_GROUP)
  private NestedSnapshotGroup snapshotGroup;

  public static final String SERIALIZED_NAME_SNAPSHOT_PLAN = "snapshotPlan";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_PLAN)
  private NestedSnapshotPlan snapshotPlan;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private SnapshotPlanExecuteStatus status;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private SnapshotPlanTaskType type;

  public SnapshotPlanTask() { 
  }

  public SnapshotPlanTask cluster(NestedCluster cluster) {
    
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public NestedCluster getCluster() {
    return cluster;
  }


  public void setCluster(NestedCluster cluster) {
    this.cluster = cluster;
  }


  public SnapshotPlanTask endTime(String endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEndTime() {
    return endTime;
  }


  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public SnapshotPlanTask entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    
    this.entityAsyncStatus = entityAsyncStatus;
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EntityAsyncStatus getEntityAsyncStatus() {
    return entityAsyncStatus;
  }


  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }


  public SnapshotPlanTask id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public SnapshotPlanTask internal(Boolean internal) {
    
    this.internal = internal;
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getInternal() {
    return internal;
  }


  public void setInternal(Boolean internal) {
    this.internal = internal;
  }


  public SnapshotPlanTask localId(String localId) {
    
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getLocalId() {
    return localId;
  }


  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public SnapshotPlanTask snapshotGroup(NestedSnapshotGroup snapshotGroup) {
    
    this.snapshotGroup = snapshotGroup;
    return this;
  }

   /**
   * Get snapshotGroup
   * @return snapshotGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NestedSnapshotGroup getSnapshotGroup() {
    return snapshotGroup;
  }


  public void setSnapshotGroup(NestedSnapshotGroup snapshotGroup) {
    this.snapshotGroup = snapshotGroup;
  }


  public SnapshotPlanTask snapshotPlan(NestedSnapshotPlan snapshotPlan) {
    
    this.snapshotPlan = snapshotPlan;
    return this;
  }

   /**
   * Get snapshotPlan
   * @return snapshotPlan
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public NestedSnapshotPlan getSnapshotPlan() {
    return snapshotPlan;
  }


  public void setSnapshotPlan(NestedSnapshotPlan snapshotPlan) {
    this.snapshotPlan = snapshotPlan;
  }


  public SnapshotPlanTask startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public SnapshotPlanTask status(SnapshotPlanExecuteStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public SnapshotPlanExecuteStatus getStatus() {
    return status;
  }


  public void setStatus(SnapshotPlanExecuteStatus status) {
    this.status = status;
  }


  public SnapshotPlanTask type(SnapshotPlanTaskType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public SnapshotPlanTaskType getType() {
    return type;
  }


  public void setType(SnapshotPlanTaskType type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnapshotPlanTask snapshotPlanTask = (SnapshotPlanTask) o;
    return Objects.equals(this.cluster, snapshotPlanTask.cluster) &&
        Objects.equals(this.endTime, snapshotPlanTask.endTime) &&
        Objects.equals(this.entityAsyncStatus, snapshotPlanTask.entityAsyncStatus) &&
        Objects.equals(this.id, snapshotPlanTask.id) &&
        Objects.equals(this.internal, snapshotPlanTask.internal) &&
        Objects.equals(this.localId, snapshotPlanTask.localId) &&
        Objects.equals(this.snapshotGroup, snapshotPlanTask.snapshotGroup) &&
        Objects.equals(this.snapshotPlan, snapshotPlanTask.snapshotPlan) &&
        Objects.equals(this.startTime, snapshotPlanTask.startTime) &&
        Objects.equals(this.status, snapshotPlanTask.status) &&
        Objects.equals(this.type, snapshotPlanTask.type);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cluster, endTime, entityAsyncStatus, id, internal, localId, snapshotGroup, snapshotPlan, startTime, status, type);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnapshotPlanTask {\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    snapshotGroup: ").append(toIndentedString(snapshotGroup)).append("\n");
    sb.append("    snapshotPlan: ").append(toIndentedString(snapshotPlan)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

