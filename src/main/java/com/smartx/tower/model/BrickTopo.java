/*
 * CloudTower APIs
 * cloudtower operation API and SDK
 *
 * * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartx.tower.model.Direction;
import com.smartx.tower.model.NestedBrickDiskLayout;
import com.smartx.tower.model.NestedBrickPower;
import com.smartx.tower.model.NestedCapacity;
import com.smartx.tower.model.NestedCluster;
import com.smartx.tower.model.NestedClusterTopo;
import com.smartx.tower.model.NestedNodeTopo;
import com.smartx.tower.model.NestedRackTopo;
import com.smartx.tower.model.NestedTagPosition;
import com.smartx.tower.model.PowerPosition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * BrickTopo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BrickTopo {
  public static final String SERIALIZED_NAME_CAPACITY = "capacity";
  @SerializedName(SERIALIZED_NAME_CAPACITY)
  private NestedCapacity capacity;

  public static final String SERIALIZED_NAME_CLUSTER = "cluster";
  @SerializedName(SERIALIZED_NAME_CLUSTER)
  private NestedCluster cluster;

  public static final String SERIALIZED_NAME_CLUSTER_TOPO = "cluster_topo";
  @SerializedName(SERIALIZED_NAME_CLUSTER_TOPO)
  private NestedClusterTopo clusterTopo;

  public static final String SERIALIZED_NAME_DISK_LAYOUT = "disk_layout";
  @SerializedName(SERIALIZED_NAME_DISK_LAYOUT)
  private NestedBrickDiskLayout diskLayout;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Integer height;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LOCAL_ID = "local_id";
  @SerializedName(SERIALIZED_NAME_LOCAL_ID)
  private String localId;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NODE_TOPOES = "node_topoes";
  @SerializedName(SERIALIZED_NAME_NODE_TOPOES)
  private List<NestedNodeTopo> nodeTopoes = null;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_POWER_LAYOUT = "power_layout";
  @SerializedName(SERIALIZED_NAME_POWER_LAYOUT)
  private Direction powerLayout;

  public static final String SERIALIZED_NAME_POWER_POSITION = "power_position";
  @SerializedName(SERIALIZED_NAME_POWER_POSITION)
  private PowerPosition powerPosition;

  public static final String SERIALIZED_NAME_POWERS = "powers";
  @SerializedName(SERIALIZED_NAME_POWERS)
  private List<NestedBrickPower> powers = null;

  public static final String SERIALIZED_NAME_RACK_TOPO = "rack_topo";
  @SerializedName(SERIALIZED_NAME_RACK_TOPO)
  private NestedRackTopo rackTopo;

  public static final String SERIALIZED_NAME_TAG_POSITION_IN_BRICK = "tag_position_in_brick";
  @SerializedName(SERIALIZED_NAME_TAG_POSITION_IN_BRICK)
  private List<NestedTagPosition> tagPositionInBrick = null;

  public BrickTopo() { 
  }

  public BrickTopo capacity(NestedCapacity capacity) {
    
    this.capacity = capacity;
    return this;
  }

   /**
   * Get capacity
   * @return capacity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public NestedCapacity getCapacity() {
    return capacity;
  }


  public void setCapacity(NestedCapacity capacity) {
    this.capacity = capacity;
  }


  public BrickTopo cluster(NestedCluster cluster) {
    
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public NestedCluster getCluster() {
    return cluster;
  }


  public void setCluster(NestedCluster cluster) {
    this.cluster = cluster;
  }


  public BrickTopo clusterTopo(NestedClusterTopo clusterTopo) {
    
    this.clusterTopo = clusterTopo;
    return this;
  }

   /**
   * Get clusterTopo
   * @return clusterTopo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NestedClusterTopo getClusterTopo() {
    return clusterTopo;
  }


  public void setClusterTopo(NestedClusterTopo clusterTopo) {
    this.clusterTopo = clusterTopo;
  }


  public BrickTopo diskLayout(NestedBrickDiskLayout diskLayout) {
    
    this.diskLayout = diskLayout;
    return this;
  }

   /**
   * Get diskLayout
   * @return diskLayout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NestedBrickDiskLayout getDiskLayout() {
    return diskLayout;
  }


  public void setDiskLayout(NestedBrickDiskLayout diskLayout) {
    this.diskLayout = diskLayout;
  }


  public BrickTopo height(Integer height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getHeight() {
    return height;
  }


  public void setHeight(Integer height) {
    this.height = height;
  }


  public BrickTopo id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public BrickTopo localId(String localId) {
    
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getLocalId() {
    return localId;
  }


  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public BrickTopo model(String model) {
    
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModel() {
    return model;
  }


  public void setModel(String model) {
    this.model = model;
  }


  public BrickTopo name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BrickTopo nodeTopoes(List<NestedNodeTopo> nodeTopoes) {
    
    this.nodeTopoes = nodeTopoes;
    return this;
  }

  public BrickTopo addNodeTopoesItem(NestedNodeTopo nodeTopoesItem) {
    if (this.nodeTopoes == null) {
      this.nodeTopoes = new ArrayList<NestedNodeTopo>();
    }
    this.nodeTopoes.add(nodeTopoesItem);
    return this;
  }

   /**
   * Get nodeTopoes
   * @return nodeTopoes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NestedNodeTopo> getNodeTopoes() {
    return nodeTopoes;
  }


  public void setNodeTopoes(List<NestedNodeTopo> nodeTopoes) {
    this.nodeTopoes = nodeTopoes;
  }


  public BrickTopo position(Integer position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPosition() {
    return position;
  }


  public void setPosition(Integer position) {
    this.position = position;
  }


  public BrickTopo powerLayout(Direction powerLayout) {
    
    this.powerLayout = powerLayout;
    return this;
  }

   /**
   * Get powerLayout
   * @return powerLayout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Direction getPowerLayout() {
    return powerLayout;
  }


  public void setPowerLayout(Direction powerLayout) {
    this.powerLayout = powerLayout;
  }


  public BrickTopo powerPosition(PowerPosition powerPosition) {
    
    this.powerPosition = powerPosition;
    return this;
  }

   /**
   * Get powerPosition
   * @return powerPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PowerPosition getPowerPosition() {
    return powerPosition;
  }


  public void setPowerPosition(PowerPosition powerPosition) {
    this.powerPosition = powerPosition;
  }


  public BrickTopo powers(List<NestedBrickPower> powers) {
    
    this.powers = powers;
    return this;
  }

  public BrickTopo addPowersItem(NestedBrickPower powersItem) {
    if (this.powers == null) {
      this.powers = new ArrayList<NestedBrickPower>();
    }
    this.powers.add(powersItem);
    return this;
  }

   /**
   * Get powers
   * @return powers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NestedBrickPower> getPowers() {
    return powers;
  }


  public void setPowers(List<NestedBrickPower> powers) {
    this.powers = powers;
  }


  public BrickTopo rackTopo(NestedRackTopo rackTopo) {
    
    this.rackTopo = rackTopo;
    return this;
  }

   /**
   * Get rackTopo
   * @return rackTopo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NestedRackTopo getRackTopo() {
    return rackTopo;
  }


  public void setRackTopo(NestedRackTopo rackTopo) {
    this.rackTopo = rackTopo;
  }


  public BrickTopo tagPositionInBrick(List<NestedTagPosition> tagPositionInBrick) {
    
    this.tagPositionInBrick = tagPositionInBrick;
    return this;
  }

  public BrickTopo addTagPositionInBrickItem(NestedTagPosition tagPositionInBrickItem) {
    if (this.tagPositionInBrick == null) {
      this.tagPositionInBrick = new ArrayList<NestedTagPosition>();
    }
    this.tagPositionInBrick.add(tagPositionInBrickItem);
    return this;
  }

   /**
   * Get tagPositionInBrick
   * @return tagPositionInBrick
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NestedTagPosition> getTagPositionInBrick() {
    return tagPositionInBrick;
  }


  public void setTagPositionInBrick(List<NestedTagPosition> tagPositionInBrick) {
    this.tagPositionInBrick = tagPositionInBrick;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrickTopo brickTopo = (BrickTopo) o;
    return Objects.equals(this.capacity, brickTopo.capacity) &&
        Objects.equals(this.cluster, brickTopo.cluster) &&
        Objects.equals(this.clusterTopo, brickTopo.clusterTopo) &&
        Objects.equals(this.diskLayout, brickTopo.diskLayout) &&
        Objects.equals(this.height, brickTopo.height) &&
        Objects.equals(this.id, brickTopo.id) &&
        Objects.equals(this.localId, brickTopo.localId) &&
        Objects.equals(this.model, brickTopo.model) &&
        Objects.equals(this.name, brickTopo.name) &&
        Objects.equals(this.nodeTopoes, brickTopo.nodeTopoes) &&
        Objects.equals(this.position, brickTopo.position) &&
        Objects.equals(this.powerLayout, brickTopo.powerLayout) &&
        Objects.equals(this.powerPosition, brickTopo.powerPosition) &&
        Objects.equals(this.powers, brickTopo.powers) &&
        Objects.equals(this.rackTopo, brickTopo.rackTopo) &&
        Objects.equals(this.tagPositionInBrick, brickTopo.tagPositionInBrick);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacity, cluster, clusterTopo, diskLayout, height, id, localId, model, name, nodeTopoes, position, powerLayout, powerPosition, powers, rackTopo, tagPositionInBrick);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrickTopo {\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    clusterTopo: ").append(toIndentedString(clusterTopo)).append("\n");
    sb.append("    diskLayout: ").append(toIndentedString(diskLayout)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeTopoes: ").append(toIndentedString(nodeTopoes)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    powerLayout: ").append(toIndentedString(powerLayout)).append("\n");
    sb.append("    powerPosition: ").append(toIndentedString(powerPosition)).append("\n");
    sb.append("    powers: ").append(toIndentedString(powers)).append("\n");
    sb.append("    rackTopo: ").append(toIndentedString(rackTopo)).append("\n");
    sb.append("    tagPositionInBrick: ").append(toIndentedString(tagPositionInBrick)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

