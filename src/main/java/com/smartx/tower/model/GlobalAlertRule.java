/*
 * CloudTower APIs
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartx.tower.model.AlertRuleObject;
import com.smartx.tower.model.AlertRuleUnit;
import com.smartx.tower.model.NestedAlertRule;
import com.smartx.tower.model.NestedThresholds;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GlobalAlertRule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GlobalAlertRule {
  public static final String SERIALIZED_NAME_ALERT_RULES = "alert_rules";
  @SerializedName(SERIALIZED_NAME_ALERT_RULES)
  private List<NestedAlertRule> alertRules = null;

  public static final String SERIALIZED_NAME_BOOLEAN = "boolean";
  @SerializedName(SERIALIZED_NAME_BOOLEAN)
  private Boolean _boolean;

  public static final String SERIALIZED_NAME_CAUSE = "cause";
  @SerializedName(SERIALIZED_NAME_CAUSE)
  private String cause;

  public static final String SERIALIZED_NAME_DEFAULT_THRESHOLDS = "default_thresholds";
  @SerializedName(SERIALIZED_NAME_DEFAULT_THRESHOLDS)
  private List<NestedThresholds> defaultThresholds = new ArrayList<NestedThresholds>();

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMPACT = "impact";
  @SerializedName(SERIALIZED_NAME_IMPACT)
  private String impact;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private AlertRuleObject _object;

  public static final String SERIALIZED_NAME_OPERATOR = "operator";
  @SerializedName(SERIALIZED_NAME_OPERATOR)
  private String operator;

  public static final String SERIALIZED_NAME_SOLUTION = "solution";
  @SerializedName(SERIALIZED_NAME_SOLUTION)
  private String solution;

  public static final String SERIALIZED_NAME_THRESHOLDS = "thresholds";
  @SerializedName(SERIALIZED_NAME_THRESHOLDS)
  private List<NestedThresholds> thresholds = new ArrayList<NestedThresholds>();

  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private AlertRuleUnit unit;

  public GlobalAlertRule() { 
  }

  public GlobalAlertRule alertRules(List<NestedAlertRule> alertRules) {
    
    this.alertRules = alertRules;
    return this;
  }

  public GlobalAlertRule addAlertRulesItem(NestedAlertRule alertRulesItem) {
    if (this.alertRules == null) {
      this.alertRules = new ArrayList<NestedAlertRule>();
    }
    this.alertRules.add(alertRulesItem);
    return this;
  }

   /**
   * Get alertRules
   * @return alertRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NestedAlertRule> getAlertRules() {
    return alertRules;
  }


  public void setAlertRules(List<NestedAlertRule> alertRules) {
    this.alertRules = alertRules;
  }


  public GlobalAlertRule _boolean(Boolean _boolean) {
    
    this._boolean = _boolean;
    return this;
  }

   /**
   * Get _boolean
   * @return _boolean
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getBoolean() {
    return _boolean;
  }


  public void setBoolean(Boolean _boolean) {
    this._boolean = _boolean;
  }


  public GlobalAlertRule cause(String cause) {
    
    this.cause = cause;
    return this;
  }

   /**
   * Get cause
   * @return cause
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCause() {
    return cause;
  }


  public void setCause(String cause) {
    this.cause = cause;
  }


  public GlobalAlertRule defaultThresholds(List<NestedThresholds> defaultThresholds) {
    
    this.defaultThresholds = defaultThresholds;
    return this;
  }

  public GlobalAlertRule addDefaultThresholdsItem(NestedThresholds defaultThresholdsItem) {
    this.defaultThresholds.add(defaultThresholdsItem);
    return this;
  }

   /**
   * Get defaultThresholds
   * @return defaultThresholds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<NestedThresholds> getDefaultThresholds() {
    return defaultThresholds;
  }


  public void setDefaultThresholds(List<NestedThresholds> defaultThresholds) {
    this.defaultThresholds = defaultThresholds;
  }


  public GlobalAlertRule disabled(Boolean disabled) {
    
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getDisabled() {
    return disabled;
  }


  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public GlobalAlertRule id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public GlobalAlertRule impact(String impact) {
    
    this.impact = impact;
    return this;
  }

   /**
   * Get impact
   * @return impact
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getImpact() {
    return impact;
  }


  public void setImpact(String impact) {
    this.impact = impact;
  }


  public GlobalAlertRule message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public GlobalAlertRule name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GlobalAlertRule _object(AlertRuleObject _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * Get _object
   * @return _object
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AlertRuleObject getObject() {
    return _object;
  }


  public void setObject(AlertRuleObject _object) {
    this._object = _object;
  }


  public GlobalAlertRule operator(String operator) {
    
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getOperator() {
    return operator;
  }


  public void setOperator(String operator) {
    this.operator = operator;
  }


  public GlobalAlertRule solution(String solution) {
    
    this.solution = solution;
    return this;
  }

   /**
   * Get solution
   * @return solution
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSolution() {
    return solution;
  }


  public void setSolution(String solution) {
    this.solution = solution;
  }


  public GlobalAlertRule thresholds(List<NestedThresholds> thresholds) {
    
    this.thresholds = thresholds;
    return this;
  }

  public GlobalAlertRule addThresholdsItem(NestedThresholds thresholdsItem) {
    this.thresholds.add(thresholdsItem);
    return this;
  }

   /**
   * Get thresholds
   * @return thresholds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<NestedThresholds> getThresholds() {
    return thresholds;
  }


  public void setThresholds(List<NestedThresholds> thresholds) {
    this.thresholds = thresholds;
  }


  public GlobalAlertRule unit(AlertRuleUnit unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AlertRuleUnit getUnit() {
    return unit;
  }


  public void setUnit(AlertRuleUnit unit) {
    this.unit = unit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalAlertRule globalAlertRule = (GlobalAlertRule) o;
    return Objects.equals(this.alertRules, globalAlertRule.alertRules) &&
        Objects.equals(this._boolean, globalAlertRule._boolean) &&
        Objects.equals(this.cause, globalAlertRule.cause) &&
        Objects.equals(this.defaultThresholds, globalAlertRule.defaultThresholds) &&
        Objects.equals(this.disabled, globalAlertRule.disabled) &&
        Objects.equals(this.id, globalAlertRule.id) &&
        Objects.equals(this.impact, globalAlertRule.impact) &&
        Objects.equals(this.message, globalAlertRule.message) &&
        Objects.equals(this.name, globalAlertRule.name) &&
        Objects.equals(this._object, globalAlertRule._object) &&
        Objects.equals(this.operator, globalAlertRule.operator) &&
        Objects.equals(this.solution, globalAlertRule.solution) &&
        Objects.equals(this.thresholds, globalAlertRule.thresholds) &&
        Objects.equals(this.unit, globalAlertRule.unit);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertRules, _boolean, cause, defaultThresholds, disabled, id, impact, message, name, _object, operator, solution, thresholds, unit);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalAlertRule {\n");
    sb.append("    alertRules: ").append(toIndentedString(alertRules)).append("\n");
    sb.append("    _boolean: ").append(toIndentedString(_boolean)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    defaultThresholds: ").append(toIndentedString(defaultThresholds)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    solution: ").append(toIndentedString(solution)).append("\n");
    sb.append("    thresholds: ").append(toIndentedString(thresholds)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

