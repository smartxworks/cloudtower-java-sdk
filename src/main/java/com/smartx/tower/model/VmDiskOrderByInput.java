/*
 * CloudTower APIs
 * cloudtower operation API and SDKation API and SDK
 *
 * The version of the OpenAPI document: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets VmDiskOrderByInput
 */
@JsonAdapter(VmDiskOrderByInput.Adapter.class)
public enum VmDiskOrderByInput {
  
  BOOT_ASC("boot_ASC"),
  
  BOOT_DESC("boot_DESC"),
  
  BUS_ASC("bus_ASC"),
  
  BUS_DESC("bus_DESC"),
  
  CLOUD_INIT_IMAGE_NAME_ASC("cloud_init_image_name_ASC"),
  
  CLOUD_INIT_IMAGE_NAME_DESC("cloud_init_image_name_DESC"),
  
  CLOUD_INIT_IMAGE_PATH_ASC("cloud_init_image_path_ASC"),
  
  CLOUD_INIT_IMAGE_PATH_DESC("cloud_init_image_path_DESC"),
  
  CREATEDAT_ASC("createdAt_ASC"),
  
  CREATEDAT_DESC("createdAt_DESC"),
  
  DEVICE_ASC("device_ASC"),
  
  DEVICE_DESC("device_DESC"),
  
  DISABLED_ASC("disabled_ASC"),
  
  DISABLED_DESC("disabled_DESC"),
  
  ID_ASC("id_ASC"),
  
  ID_DESC("id_DESC"),
  
  KEY_ASC("key_ASC"),
  
  KEY_DESC("key_DESC"),
  
  MAX_BANDWIDTH_ASC("max_bandwidth_ASC"),
  
  MAX_BANDWIDTH_DESC("max_bandwidth_DESC"),
  
  MAX_BANDWIDTH_POLICY_ASC("max_bandwidth_policy_ASC"),
  
  MAX_BANDWIDTH_POLICY_DESC("max_bandwidth_policy_DESC"),
  
  MAX_IOPS_ASC("max_iops_ASC"),
  
  MAX_IOPS_DESC("max_iops_DESC"),
  
  MAX_IOPS_POLICY_ASC("max_iops_policy_ASC"),
  
  MAX_IOPS_POLICY_DESC("max_iops_policy_DESC"),
  
  SERIAL_ASC("serial_ASC"),
  
  SERIAL_DESC("serial_DESC"),
  
  TYPE_ASC("type_ASC"),
  
  TYPE_DESC("type_DESC"),
  
  UNSAFE_IMAGE_PATH_ASC("unsafe_image_path_ASC"),
  
  UNSAFE_IMAGE_PATH_DESC("unsafe_image_path_DESC"),
  
  UNSAFE_IMAGE_UUID_ASC("unsafe_image_uuid_ASC"),
  
  UNSAFE_IMAGE_UUID_DESC("unsafe_image_uuid_DESC"),
  
  UNSAFE_PROVISION_ASC("unsafe_provision_ASC"),
  
  UNSAFE_PROVISION_DESC("unsafe_provision_DESC"),
  
  UPDATEDAT_ASC("updatedAt_ASC"),
  
  UPDATEDAT_DESC("updatedAt_DESC");

  private String value;

  VmDiskOrderByInput(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static VmDiskOrderByInput fromValue(String value) {
    for (VmDiskOrderByInput b : VmDiskOrderByInput.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<VmDiskOrderByInput> {
    @Override
    public void write(final JsonWriter jsonWriter, final VmDiskOrderByInput enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public VmDiskOrderByInput read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return VmDiskOrderByInput.fromValue(value);
    }
  }
}

